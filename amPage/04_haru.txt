#####qask#####<div class="sentence">浮動小数点数を，仮数部が7ビットである表示形式のコンピュータで計算した場合，情報落ちが<u>発生しないもの</u>はどれか。ここで，仮数部が7ビットの表示形式とは次のフォーマットであり，( )<sub>2</sub>内は2進数，Yは指数である。また，{ }内を先に計算するものとする。<br/><br/>　(1.X<sub>1</sub>X<sub>2</sub>X<sub>3</sub>X<sub>4</sub>X<sub>5</sub>X<sub>6</sub>X<sub>7</sub>)<sub>2</sub>×2<sup>Y</sup></div>/////qask/////<ul class="selectList"><li>{(1.1)<sub>2</sub>×2<sup>-3</sup>＋(1.0)<sub>2</sub>×2<sup>-4</sup>}＋(1.0)<sub>2</sub>×2<sup>5</sup></li><li>{(1.1)<sub>2</sub>×2<sup>-3</sup>－(1.0)<sub>2</sub>×2<sup>-4</sup>}＋(1.0)<sub>2</sub>×2<sup>5</sup></li><li>{(1.0)<sub>2</sub>×2<sup>5</sup>＋(1.1)<sub>2</sub>×2<sup>-3</sup>}＋(1.0)<sub>2</sub>×2<sup>-4</sup></li><li>{(1.0)<sub>2</sub>×2<sup>5</sup>－(1.0)<sub>2</sub>×2<sup>-4</sup>}＋(1.1)<sub>2</sub>×2<sup>-3</sup></li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu"><strong>情報落ち</strong>は、浮動小数点演算において、絶対値の大きな数と絶対値の小さな数の加減算を行ったとき、絶対値の小さな数の有効けたの一部または全部が結果に反映されないことをいいます。一般的に数多くの数値の加算を行う場合には、絶対値の小さなものから順番に計算すると情報落ちを抑制することができます。<br/><br/>浮動小数点数同士の計算では、指数が小さい方の仮数部を指数が大きい方に揃え、仮数部同士を演算します。実際に計算していくと以下のようになります。<ul class="selectList"><li class="lia">　(1.1)<sub>2</sub>×2<sup>-3</sup>＋(1.0)<sub>2</sub>×2<sup>-4</sup><br/>＝(1.1)<sub>2</sub>×2<sup>-3</sup>＋(0.1)<sub>2</sub>×2<sup>-3</sup> （指数部を-3に揃える）<br/>＝(10.0)<sub>2</sub>×2<sup>-3</sup>＝(1.0)<sub>2</sub>×2<sup>-2</sup><br/>　(1.0)<sub>2</sub>×2<sup>-2</sup>＋(1.0)<sub>2</sub>×2<sup>5</sup><br/>＝(0.0000001)<sub>2</sub>×2<sup>5</sup>＋(1.0)<sub>2</sub>×2<sup>5</sup>（指数部を5に揃える）<br/>＝(1.0000001)<sub>2</sub>×2<sup>5</sup><br/>情報落ちは発生しないので、本肢が正解となります。</li><li class="lii">　(1.1)<sub>2</sub>×2<sup>-3</sup>－(1.0)<sub>2</sub>×2<sup>-4</sup><br/>＝(1.1)<sub>2</sub>×2<sup>-3</sup>－(0.1)<sub>2</sub>×2<sup>-3</sup> （指数部を-3に揃える）<br/>＝(1.0)<sub>2</sub>×2<sup>-3</sup><br/>　(1.0)<sub>2</sub>×2<sup>-3</sup>＋(1.0)<sub>2</sub>×2<sup>5</sup><br/>＝(0.0000000<u>1</u>)<sub>2</sub>×2<sup>5</sup>＋(1.0)<sub>2</sub>×2<sup>5</sup>（指数部を5に揃える）<br/>→(1.0)<sub>2</sub>×2<sup>5</sup>（情報落ちが発生）<br/>必要な仮数部が8ビットとなり、7ビットの仮数部からあふれた部分が計算結果に反映されないため情報落ちが発生します。</li><li class="liu">　(1.0)<sub>2</sub>×2<sup>5</sup>＋(1.1)<sub>2</sub>×2<sup>-3</sup><br/>＝(1.0)<sub>2</sub>×2<sup>5</sup>＋(0.0000000<u>11</u>)<sub>2</sub>×2<sup>5</sup><br/>→(1.0)<sub>2</sub>×2<sup>5</sup>（情報落ちが発生）<br/>必要な仮数部が9ビットとなり、7ビットの仮数部からあふれた部分が計算結果に反映されないため情報落ちが発生します。</li><li class="lie">　(1.0)<sub>2</sub>×2<sup>5</sup>－(1.0)<sub>2</sub>×2<sup>-4</sup><br/>＝(1.0)<sub>2</sub>×2<sup>5</sup>－(0.0000000<u>01</u>)<sub>2</sub>×2<sup>5</sup><br/>→(1.0)<sub>2</sub>×2<sup>5</sup>（情報落ちが発生）<br/>必要な仮数部が9ビットとなり、7ビットの仮数部からあふれた部分が計算結果に反映されないため情報落ちが発生します。</li></ul></div>#####qask#####<div class="sentence">全体集合S内に異なる部分集合AとBがあるとき，<span class="ol">A</span>∩<span class="ol">B</span>に等しいものはどれか。ここで，A∪BはAとBの和集合，A∩BはAとBの積集合，<span class="ol">A</span>はSにおけるAの補集合，A－BはAからBを除いた差集合を表す。</div>/////qask/////<ul class="selectList"><li><span class="ol">A</span>－B</li><li>(<span class="ol">A</span>∪<span class="ol">B</span>)－(A∩B)</li><li>(S－A)∪(S－B)</li><li>S－(A∩B)</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu">それぞれの集合演算の結果をベン図で表すと次のようになります。<br/><br/>[問題文 <span class="ol">A</span>∩<span class="ol">B</span>]<div class="img_margin"><img alt="02.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/02.gif"/></div><ul class="selectList"><li class="lia"><span class="ol">A</span>－B<div class="img_margin"><img alt="02a.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/02a.gif"/></div></li><li class="lii">(<span class="ol">A</span>∪<span class="ol">B</span>)－(A∩B)<div class="img_margin"><img alt="02i.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/02i.gif"/></div></li><li class="liu">(S－A)∪(S－B)<div class="img_margin"><img alt="02u.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/02u.gif"/></div></li><li class="lie">S－(A∩B)<div class="img_margin"><img alt="02e.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/02e.gif"/></div></li></ul>したがって、<span class="ol">A</span>∩<span class="ol">B</span>と結果が等しいものは「<span class="ol">A</span>－B」であるとわかります。</div>#####qask#####<div class="sentence">M/M/1の待ち行列モデルにおいて，窓口の利用率が25%から40%に増えると，平均待ち時間は何倍になるか。</div>/////qask/////<ul class="selectList"><li>1.25</li><li>1.60</li><li>2.00</li><li>3.00</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu">M/M/1の待ち行列モデルで平均待ち時間を計算する式は以下のとおりです。<br/><br/>　平均待ち時間＝<span class="frac"><span>利用率</span>1－利用率</span>×平均サービス時間<br/><br/>利用率が25%のときの平均待ち時間は、<br/><br/>　<span class="frac"><span>0.25</span>1－0.25</span>×平均サービス時間＝<span class="frac"><span>1</span>3</span>×平均サービス時間<br/><br/>利用率が40%のときの平均待ち時間は、<br/><br/>　<span class="frac"><span>0.4</span>1－0.4</span>×平均サービス時間＝<span class="frac"><span>2</span>3</span>×平均サービス時間<br/><br/>2つを比べると平均待ち時間は2倍になることがわかります。したがって「ウ」が正解です。</div>#####qask#####<div class="sentence">ハミング符号とは，データに冗長ビットを付加して，1ビットの誤りを訂正できるようにしたものである。ここでは，X<sub>1</sub>，X<sub>2</sub>，X<sub>3</sub>，X<sub>4</sub>の4ビットから成るデータに，3ビットの冗長ビットP<sub>3</sub>，P<sub>2</sub>，P<sub>1</sub>を付加したハミング符号 X<sub>1</sub>X<sub>2</sub>X<sub>3</sub>P<sub>3</sub>X<sub>4</sub>P<sub>2</sub>P<sub>1</sub> を考える。付加ビットP<sub>1</sub>，P<sub>2</sub>，P<sub>3</sub>は，それぞれ<br/>　　X<sub>1</sub>⊕X<sub>3</sub>⊕X<sub>4</sub>⊕P<sub>1</sub>＝0<br/>　　X<sub>1</sub>⊕X<sub>2</sub>⊕X<sub>4</sub>⊕P<sub>2</sub>＝0<br/>　　X<sub>1</sub>⊕X<sub>2</sub>⊕X<sub>3</sub>⊕P<sub>3</sub>＝0<br/>となるように決める。ここで⊕は排他的論理和を表す。<br/>　ハミング符号 1110011 には1ビットの誤りが存在する。誤りビットを訂正したハミング符号はどれか。</div>/////qask/////<ul class="selectList"><li>0110011</li><li>1010011</li><li>1100011</li><li>1110111</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu">ハミング符号 1110011 をデータビットと冗長ビットに分けると次のようになります。<br/><ul class="none"><li>X<sub>1</sub>=1，X<sub>2</sub>=1，X<sub>3</sub>=1，X<sub>4</sub>=0，</li><li>P<sub>1</sub>=1，P<sub>2</sub>=1，P<sub>3</sub>=0</li></ul>各ビットを問題中の3つの式に当てはめて、誤りを検証します。<br/><ul class="none"><li>1⊕1⊕0⊕1＝1</li><li>1⊕1⊕0⊕1＝1</li><li>1⊕1⊕1⊕0＝1</li></ul>存在する誤りが1ビットであり、すべての式の結果が0ではないということは、唯一すべての式に含まれているX<sub>1</sub>が誤りビットであると判断できます。<br/><br/>したがって、訂正前のハミング符号「1110011」のX<sub>1</sub>(1ビット目)を0に反転させた「0110011」が正解となります。</div>#####qask#####<div class="sentence">リストには，配列で実現する場合とポインタで実現する場合とがある。リストを配列で実現した場合の特徴として，適切なものはどれか。ここで，配列を用いたリストは配列に要素を連続して格納することによってリストを構成し，ポインタを用いたリストは要素と次の要素へのポインタを用いることによってリストを構成するものとする。</div>/////qask/////<ul class="selectList"><li>リストにある実際の要素数にかかわらず，リストに入れられる要素の最大個数に対応した領域を確保し，実際には使用されない領域が発生する可能性がある。</li><li>リストの中間要素を参照するには，リストの先頭から順番に要素をたどっていくことから，要素数に比例した時間が必要となる。</li><li>リストの要素を格納する領域の他に，次の要素を指し示すための領域が別途必要となる。</li><li>リストへの挿入位置が分かる場合には，リストにある実際の要素数にかかわらず，要素の挿入を一定時間で行うことができる。</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu"><ul class="selectList"><li class="lia">正しい。配列で実現するリストの特徴です。配列を用いる場合は最大の要素数を格納できるだけのメモリ領域をあらかじめ確保する必要があります。1,000要素分確保しても実際の格納数が10要素程度だとすると、残りの990要素分のメモリ領域が無駄になってしまいます。</li><li class="lii">ポインタで実現するリストの特徴です。配列リストでは要素をメモリ上の連続した領域に格納するので、添字と一要素のデータサイズから参照すべきメモリアドレスをすぐに計算することができます。したがって、要素の格納位置にかかわらず参照時間は一定になります。</li><li class="liu">ポインタで実現するリストの特徴です。配列リストでは連続したメモリ領域に添字順に要素を格納するので、次の要素の位置を容易に計算することができます。したがって、ポインタリストのように次の要素へのポインタを保持しておく必要はありません。</li><li class="lie">配列リストに要素を挿入する場合、挿入位置より後ろに格納されている要素を1つずつ後ろの領域へ移動しなくてはなりません。また削除する場合は削除位置より後ろに格納されている要素を1つずつ前に移動する必要があります。挿入や削除の対象要素が配列リストの前方であるほど、後方に存在する要素が多くなるので処理に時間がかかることになります。</li></ul></div>#####qask#####<div class="sentence">再入可能プログラムの特徴はどれか。</div>/////qask/////<ul class="selectList"><li>主記憶上のどこのアドレスに配置しても，実行することができる。</li><li>手続の内部から自分自身を呼び出すことができる。</li><li>必要な部分を補助記憶装置から読み込みながら動作する。主記憶領域の大きさに制限があるときに，有効な手法である。</li><li>複数のタスクからの呼出しに対して，並行して実行されても，それぞれのタスクに正しい結果を返す。</li></ul>/////qask/////エ/////qask/////<div class="sentence" id="kaisetsu"><strong>再入可能</strong>(リエントラント)プログラムとは、複数のタスクから同時に呼び出されても、それぞれに正しい値を返すことできるプログラム構造のことを表します。これを実現するには、プログラムをデータ部分と内容が共通である手続き部分に分離し、データ部分をタスクごとに用意する必要があります。<ul class="selectList"><li class="lia">再配置可能プログラムの特徴です。</li><li class="lii">再帰プログラムの特徴です。</li><li class="liu">オーバーレイの説明です。</li><li class="lie">正しい。再入可能プログラムの特徴です。</li></ul></div>#####qask#####<div class="sentence">プログラム言語のうち，ブロックの範囲を指定する方法として特定の記号や予約語を用いず，等しい文字数の字下げを用いるという特徴をもつものはどれか。</div>/////qask/////<ul class="selectList"><li>C</li><li>Java</li><li>PHP</li><li>Python</li></ul>/////qask/////エ/////qask/////<div class="sentence" id="kaisetsu"><strong>Python</strong>(パイソン)は、1991年にグイド・ヴァンロッサム氏によって開発された汎用の高水準プログラミング言語です。コードブロックのインデントが構文規則となっていることがソースコード上の特徴です。小さなプログラムから大規模なシステムまで、そしてデスクトップアプリケーションからWebアプリケーションの開発まで様々な場面で使用されています("YouTube"や"Dropbox"などが有名)。簡潔な文法と使いやすさ、対応するプラットフォームの多さ、優れたライブラリの存在等により、AI開発に適した言語としても人気が過熱しています。<br/><br/>C、Java、および選択肢のPHPを含む一般的なプログラミング言語では、以下のようにコードブロックを"{"と"}"で囲って示します。<br/><div class="pre">if (条件式) {<br/>　処理1<br/>　処理2<br/>} else {<br/>　処理3<br/>}</div>コードブロック内の字下げ(インデント)は、コーディング規約上の指定であり言語仕様上は任意です。また、コードブロック内の処理が1つのときには"{ }"を省略可能となっています。したがって、上記のコードを次のようにわかりにくく記述してもコンパイルは問題なくできるわけです。<br/><div class="pre">if (<br/>条件式)<br/>{ 処理1<br/>処理2 }<br/> else 処理3</div>一方、Pythonではコードブロックをインデントの深さによって示す言語仕様になっており、"{ }"で囲む必要がありません。また条件式全体を"( )"で囲むこともありませんので見た感じがスッキリします。インデントの強制により誰が記述してもある程度整形されたソースコードになるため、可読性に優れていると言えます。<br/><div class="pre">if 条件式:<br/>　処理1<br/>　処理2<br/>else:<br/>　処理3</div><ul class="selectList"><li class="lia">Cは、"{"と"}"で囲むことでコードブロックを指定します。</li><li class="lii">Javaは、"{"と"}"で囲むことでコードブロックを指定します。</li><li class="liu">PHPは、"{"と"}"で囲むことでコードブロックを指定します。</li><li class="lie">正しい。Pythonは、インデントの深さでコードブロックを指定するプログラム言語です。</li></ul></div>#####qask#####<div class="sentence">プロセッサの高速化技法の一つとして，同時に実行可能な複数の動作を，コンパイルの段階でまとめて一つの複合命令とし，高速化を図る方式はどれか。</div>/////qask/////<ul class="selectList"><li>CISC</li><li>MIMD</li><li>RISC</li><li>VLIW</li></ul>/////qask/////エ/////qask/////<div class="sentence" id="kaisetsu"><strong>VLIW</strong>(Very Long Instruction Word)とは、プログラムのコンパイル時に依存関係のない複数の命令を1つの複合命令にまとめ、同時に実行させる手法です。「very long」の名が示すように1つの命令がとても長くなります。<br/><br/>通常のパイプライン処理では、命令の依存関係などをCPUが判断しながら実行していきますが、VLIWでは、あらかじめ並列動作が可能な状態になっているので、CPU処理のオーバーヘッド減少と高速化が望めます。ただし、ソースコードからプログラムを作成するコンパイラの設計はその分難しくなります。<ul class="selectList"><li class="lia">Complex Instruction Set Computerの略。複雑で多機能な命令セットでコンピュータを構成する設計方法です。</li><li class="lii">Multiple Instruction, Multiple Dataの略。複数の命令とそれに対応するデータを、それぞれが独立している複数のプロセッサに振り分けて並列処理をする方式です。</li><li class="liu">Reduced Instruction Set Computerの略。CPUに与える命令を短く固定長化し、専用の論理回路で高速に実行できるようにした命令セットでコンピュータを構成する設計方法です。</li><li class="lie">正しい。VLIWは、複数の処理を1つの非常に長い命令にまとめて並列実行する高速化技法です。</li></ul></div>#####qask#####<div class="sentence">キャッシュメモリのアクセス時間が主記憶のアクセス時間の1／30で，ヒット率が95％のとき，実効メモリアクセス時間は，主記憶のアクセス時間の約何倍になるか。</div>/////qask/////<ul class="selectList"><li>0.03</li><li>0.08</li><li>0.37</li><li>0.95</li></ul>/////qask/////イ/////qask/////<div class="sentence" id="kaisetsu">実効アクセス時間を計算する公式は以下のとおりです。<br/><br/>　(キャッシュメモリのアクセス時間×ヒット率)＋主記憶のアクセス時間×(1－ヒット率)<br/><br/>主記憶へのアクセス時間を"1"とすると、キャッシュメモリへのアクセス時間は"1／30"と表すことができます。この値を上記の公式に代入して、主記憶へのアクセス時間に対する実効アクセス時間の割合を計算をします。<br/><br/>　(1／30×0.95)＋1×0.05<br/>＝0.95／30＋0.05<br/>＝0.95／30＋1.5／30<br/>＝2.45／30<br/>＝0.081666…≒<em class="r">0.08</em><br/><br/>したがって、実効メモリアクセス時間は主記憶のアクセス時間のおよそ「0.08倍」になることがわかります。</div>#####qask#####<div class="sentence">キャッシュメモリのフルアソシエイティブ方式に関する記述として，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>キャッシュメモリの各ブロックに主記憶のセットが固定されている。</li><li>キャッシュメモリの各ブロックに主記憶のブロックが固定されている。</li><li>主記憶の特定の1ブロックに専用のキャッシュメモリが割り当てられる。</li><li>任意のキャッシュメモリのブロックを主記憶のどの部分にも割り当てられる。</li></ul>/////qask/////エ/////qask/////<div class="sentence" id="kaisetsu">主記憶上の格納位置とキャッシュメモリ上の格納位置とをどのように対応させるかを決める方式として、ダイレクトマップ、フルアソシエイティブ、セットアソシエイティブがあります。<dl><dt>ダイレクトマップ</dt><dd>ハッシュ演算などにより、主記憶のブロック番号からキャッシュメモリのブロック番号が一意に定まる方式。主記憶のブロックとキャッシュメモリのブロックが1対1で対応する</dd><dt>フルアソシエイティブ</dt><dd>主記憶のブロックをキャッシュメモリ上のどのブロックにも格納することができる方式</dd><dt>セットアソシエイティブ</dt><dd>キャッシュメモリのブロックを連続した一定数ごとにまとめた"セット"を用意し、主記憶のブロック番号から対応する"セット"が一意に定まり、そのセット内のブロックならどこでも格納できる方式。ダイレクトマップとフルアソシエイティブの中間的な存在で、現在ほぼすべてのCPUアーキテクチャで採用されている</dd></dl><ul class="selectList"><li class="lia">セットアソシエイティブ方式の説明です。フルアソシエイティブ方式ではセットは用意しません。</li><li class="lii">ダイレクトマップ方式の説明です。フルアソシエイティブ方式では主記憶のブロックをキャッシュメモリのどのブロックにも割り当てることができます。</li><li class="liu">フルアソシエイティブ方式では、主記憶上の特定ブロックに対して専用のキャッシュメモリが関連付けられることはありません。</li><li class="lie">正しい。フルアソシエイティブ方式の説明です。</li></ul></div>#####qask#####<div class="sentence">8Tバイトの磁気ディスク装置6台を，予備ディスク(ホットスペアディスク)1台込みのRAID5構成にした場合，実効データ容量は何Tバイトになるか。</div>/////qask/////<ul class="selectList"><li>24</li><li>32</li><li>40</li><li>48</li></ul>/////qask/////イ/////qask/////<div class="sentence" id="kaisetsu"><strong>RAID5</strong>は、データ本体とともにパリティという誤り訂正符号を複数のディスクに分散して書き込む方式で、耐障害性、アクセスの高速化、大容量化のすべてを実現することができます。<div class="img_margin"><img alt="11.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/11.gif"/></div>RAIDにおける予備ディスク(ホットスペアディスク)とは、故障したディスクの代替として使用するために用意しておくディスクです。あらかじめ通電状態で待機させておき、他のディスクに故障が発生したときには、故障したディスクを切り離して予備ディスクに故障したディスクのデータを復元し障害発生前の状態に復旧します。この問題では6台のうち1台を予備とするのでRAIDは5台で構成することになります。<br/>パリティの容量ですが、RAIDを構成するディスク台数に関係なくパリティの保存には常にディスク1台分の容量を要すると決まっているので、データの保存に使える実効容量はディスク4台分、すなわち「8Tバイト×4台＝32Tバイト」となります。<br/><br/>したがって正解は「イ」になります。</div>#####qask#####<div class="sentence">プロセッサ数と，計算処理におけるプロセスの並列化が可能な部分の割合とが，性能向上へ及ぼす影響に関する記述のうち，アムダールの法則に基づいたものはどれか。</div>/////qask/////<ul class="selectList"><li>全ての計算処理が並列化できる場合，速度向上比は，プロセッサ数を増やしてもある水準に漸近的に近づく 。</li><li>並列化できない計算処理がある場合，速度向上比は，プロセッサ数に比例して増加する。</li><li>並列化できない計算処理がある場合，速度向上比は，プロセッサ数を増やしてもある水準に漸近的に近づく。</li><li>並列化できる計算処理の割合が増えると，速度向上比は，プロセッサ数に反比例して減少する。</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu"><strong>アムダールの法則</strong>は、計算処理中の並列可能な部分の割合が、プロセッサを増やしたときの性能向上比にどのように影響するかの関係を示した法則です。性能向上比、並列可能な部分の割合、プロセッサ増加数は以下の関係があります。<div class="img_margin"><img alt="12.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/12.gif"/></div><ul class="selectList"><li class="lia">すべての部分が並列化できる場合、性能向上比は以下の式で求めることになります。<br/>　性能向上比＝<span class="frac"><span>1</span>1／プロセッサ数</span><br/>単純にプロセッサ数が増えるほど式の分母が小さくなっていき性能向上比は大きな値になります。高速化を阻むものがないので、速度向上比は、ある水準で留まらずにプロセッサ数に比例して増加します。</li><li class="lii">並列化できない計算処理がある場合、その部分はどれだけプロセッサ数を増やしても一定の速度でしか計算できないので、速度向上比は、プロセッサ数を増やしてもある水準に漸近的に近づきます。</li><li class="liu">正しい。「イ」の解説どおりです。<br/>並列化できない部分がある場合、どれだけプロセッサ数を増やしても速度向上比は一定値で頭打ちになるというのが、アムダールの法則に基づく結論です。</li><li class="lie">並列化できる部分の割合が増えると、同じプロセッサ数でも速度向上比は増加します。減少することはありません。</li></ul></div>#####qask#####<div class="sentence">ホットスタンバイシステムにおいて，現用系に障害が発生して待機系に切り替わる契機として，最も適切な例はどれか。</div>/////qask/////<ul class="selectList"><li>現用系から待機系ヘ定期的に送信され，現用系が動作中であることを示すメッセージが途切れたとき</li><li>現用系の障害をオペレータが認識し，コンソール操作を行ったとき</li><li>待機系が現用系にたまった処理の残量を定期的に監視していて，残量が一定量を上回ったとき</li><li>待機系から現用系に定期的にロードされ実行される診断プログラムが，現用系の障害を検出したとき</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu"><strong>ホットスタンバイシステム</strong>は、システムを2系統用意しておき、本番系が故障したときは、本番系と同一の処理プログラムをあらかじめ起動して待機している予備系のコンピュータに速やかに切り替えて、処理を続行するシステム構成です。<br/><br/>ホットスタンバイのように両方のサーバが起動状態である冗長構成の場合は、障害発生時に即座に切替えができるようにサーバ同士が定期的に情報交換を行い、サーバダウンを自律的に検出するようになっています。確認方法としては、現用系のサーバが自らが正常に稼働していることを外部に知らせる「ハートビートパケット」や、待機系のサーバから現用系にパケット(ping,TCP,HTTPなど)を送り、適切な応答が得られるかで判断を行う「ヘルスチェック方式」などがあります。<br/>待機系は、ハートビートパケットが一定時間以上途切れた時やヘルスチェックでの異常を検知すると現用系で障害が発生したと判断します。そして自らが現用系となり処理を引き継ぐ仕組みになっています。<br/><br/>選択肢「ア」はハートビートに関する記述であり、ホットスタンバイが切り替わるタイミングとして適切です。その他のタイミングでは現用系がダウンしている時間が長くなるので不適切です。</div>#####qask#####<div class="sentence">MTBFを長くするよりも，MTTRを短くするのに役立つものはどれか。</div>/////qask/////<ul class="selectList"><li>エラーログ取得機能</li><li>記憶装置のビット誤り訂正機能</li><li>命令再試行機能</li><li>予防保全</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu"><strong>MTTR</strong>(Mean Time To Repair)は、システムの障害から回復するために要した平均修復時間なので、障害からの回復時間を短くできる施策を選びます。MTTRを短くする施策には、エラーログの取得、命令トレース機能、遠隔保守、保守部門の分散配置などがあります。<ul class="selectList"><li class="lia">正しい。エラーログには障害原因に関連する情報が記録されていることがあります。障害発生時にエラーログを分析することは、障害原因を迅速に特定する手段として有効です。このためエラーログ取得機能はMTTRを短くするのに役立ちます。</li><li class="lii">記憶装置の誤り訂正機能があれば、障害の原因となるビット誤りを自動で解消できるので、MTBFを長くするのに役立ちます。</li><li class="liu">命令が何らかの原因によりエラーになっても、再試行機能による再試行が成功すればシステムが停止せずに済みます。よって、MTBFを長くするために役立ちます。</li><li class="lie">予防保全では異常がないかをチェックしたり経年劣化した部品を故障前に交換したりするので、障害発生を未然に防ぐ効果があります。よって、MTBFを長くするのに役立ちます。</li></ul></div>#####qask#####<div class="sentence">2台のプリンターがあり，それぞれの稼働率が0.7と0.6である。この2台のプリンターのいずれか一方が稼動していて，他方が故障している確率は幾らか。ここで，2台のプリンターの稼動状態は独立であり，プリンター以外の要因は考慮しないものとする。</div>/////qask/////<ul class="selectList"><li>0.18</li><li>0.28</li><li>0.42</li><li>0.46</li></ul>/////qask/////エ/////qask/////<div class="sentence" id="kaisetsu">片方の機器だけが稼働している割合は、全体から両方の機器が稼働している割合と両方の機器が故障している割合を引くことで求めることができます。<br/><br/>式で表すと以下のとおりです。<br/><br/>　<b>片方のみが稼働している割合＝1－両方が稼働している割合－両方が故障している割合</b><br/><br/>この式を使って答えを求めます。<dl><dt>両方が稼働している割合</dt><dd>0.7×0.6＝0.42</dd><dt>両方が故障している割合</dt><dd>故障率＝1－稼働率なので、{(1－0.7)×(1－0.6)}＝0.3×0.4＝0.12</dd><dt>片方だけが稼働している割合</dt><dd>1－0.42－0.12＝0.46</dd></dl>したがって、プリンターのいずれか一方が稼動していて、他方が故障している確率は「0.46」です。</div>#####qask#####<div class="sentence">ジョブ群と実行の条件が次のとおりであるとき，一時ファイルを作成する磁気ディスクに必要な容量は最低何Mバイトか。<br/><br/>〔ジョブ群〕<div class="img_margin"><img alt="16.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/16.gif"/></div>〔実行の条件〕<ul class="parenthesesList"><li class="li1">ジョブの実行多重度を2とする。</li><li class="li2">各ジョブの処理時間は同一であり，他のジョブの影響は受けない。</li><li class="li3">各ジョブは開始時に50Mバイトの一時ファイルを新たに作成する。</li><li class="li4"><img alt="16_1.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/16_1.gif"/>の関係があれば，ジョブXの開始時に作成した一時ファイルは，直後のジョブYで参照し，ジョブYの終了時にその一時ファイルを削除する。直後のジョブが複数個ある場合には，最初に生起されるジョブだけが先行ジョブの一時ファイルを参照する。</li><li class="li5"><img alt="16_2.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/16_2.gif"/>はジョブXの終了時に，ジョブY，ZのようにジョブXと矢印で結ばれる全てのジョブが，上から記述された順に優先して生起されることを示す。</li><li class="li6"><img alt="16_3.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/16_3.gif"/>は先行するジョブX，Y両方が終了したときにジョブZが生起されることを示す。</li><li class="li7">ジョブの生起とは実行待ち行列への追加を意味し，各ジョブは待ち行列の順に実行される。</li><li class="li8">OSのオーバーヘッドは考慮しない。</li></ul></div>/////qask/////<ul class="selectList"><li>100</li><li>150</li><li>200</li><li>250</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu">一時ファイルはジョブの開始時に作成され、直後のジョブが終了した時点で削除されます。問題文の条件に従ってジョブの実行状況を追跡すると次のようになります。<ol><li>ジョブAが生起され実行開始される。<br/>→<em class="m">50Mバイトの一時ファイルを作成</em></li><li>ジョブAが終了する。一時ファイルは直後のジョブB、Cで参照するので削除しない。</li><li>ジョブB、ジョブCが生起される。多重度は2なのでどちらも実行開始される。<br/>→50×2で<em class="m">100Mバイトの一時ファイルを作成</em></li><li>ジョブB、ジョブCが終了する。ジョブAの一時ファイルが削除される。</li><li>ジョブD、ジョブEが生起される。多重度は2なのでどちらも実行開始される。<br/>→50×2で<em class="m">100Mバイトの一時ファイルを作成</em></li><li>ジョブD、ジョブEが終了する。ジョブB、ジョブCの一時ファイルが削除される。</li><li>ジョブFが生起され実行開始される。<br/>→<em class="m">50Mバイトの一時ファイルを作成</em></li><li>ジョブFが終了する。ジョブD、ジョブEの一時ファイルが削除される。</li></ol><div class="img_margin"><img alt="16a.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/16a.gif"/></div>一時ファイルの容量が最も多くなるのは、4つの一時ファイルが同時に存在するジョブD・E実行中で、その容量は200Mバイトです。したがって、一時ファイルを作成する磁気ディスクには少なくとも「200Mバイト」の容量が必要です。</div>#####qask#####<div class="sentence">一つのI<sup>2</sup>Cバスに接続された二つのセンサーがある。それぞれのセンサー値を読み込む二つのタスクで排他的に制御したい。利用するリアルタイムOSの機能として，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>キュー</li><li>セマフォ</li><li>マルチスレッド</li><li>ラウンドロビン</li></ul>/////qask/////イ/////qask/////<div class="sentence" id="kaisetsu"><strong>セマフォ</strong>は、並行動作している複数のタスク間で共通して使用する資源へのアクセスを制御するメカニズムです。資源を使用するにはセマフォを取得する必要があり、あるタスクがセマフォを取得するとセマフォは1つ減り、逆に資源が解放されると1つ増えます。セマフォが0であれば資源へのアクセスを待たなくてはなりません。この仕組みによって、同時更新が問題となる処理部分の排他制御を行います。セマフォは、整数型の共有変数である「セマフォ変数」とそれを操作する「P操作」「V操作」で管理されます。<ul class="selectList"><li class="lia">キューは、先入れ先出し(FIFO)処理を行うデータ構造です。</li><li class="lii">正しい。セマフォは、タスク間の排他制御に用いる仕組みです。</li><li class="liu">マルチスレッドは、OSから見た実行単位であるプロセスを複数の処理単位(スレッド)に細分化し、並行処理を行う仕組みです。</li><li class="lie">ラウンドロビンは、実行可能状態となった順に従ってタスクに一定のCPU時間(タイムクウォンタム)を与えていくタスクスケジューリング方式です。</li></ul></div>#####qask#####<div class="sentence">フラグメンテーションに関する記述のうち，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>可変長ブロックのメモリプール管理方式では，様々な大きさのメモリ領域の獲得や返却を行ってもフラグメンテーションは発生しない。</li><li>固定長ブロックのメモリプール管理方式では，可変長ブロックのメモリプール管理方式よりもメモリ領域の獲得と返却を速く行えるが，フラグメンテーションが発生しやすい。</li><li>フラグメンテーションの発生によって，合計としては十分な空きメモリ領域があるにもかかわらず，必要とするメモリ領域を獲得できなくなることがある。</li><li>メモリ領域の獲得と返却の頻度が高いシステムでは，フラグメンテーションの発生を防止するため，メモリ領域が返却されるたびにガーベジコレクションを行う必要がある。</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu"><strong>フラグメンテーション</strong>とは、記憶領域の断片化のことで、主記憶や補助記憶装置の記憶領域内に小さな未使用領域が不連続に存在する状態のことです。フラグメンテーションが発生すると、合計としては十分な記憶領域があるにもかかわらず、必要とする連続した記憶領域を確保できなくなってしまいます。この状態になるとファイルやデータを分割して記録しなければならなくなり、アクセス効率が低下します。フラグメンテーションは、記憶領域を可変長で区画してプログラムに割り当てる可変長方式で発生します。<ul class="selectList"><li class="lia">可変長方式では、様々なサイズのメモリ領域の確保と解放を繰り返すので、記憶領域の断片化(フラグメンテーション)が生じます。</li><li class="lii">固定長方式では、割り当てる区画の大きさが決まっていてメモリ領域の確保と解放を繰り返しても細切れになる領域が生じる余地がないため、フラグメンテーションは発生しません。</li><li class="liu">正しい。フラグメンテーションが発生すると、連続した未使用領域が確保しにくくなります。</li><li class="lie">フラグメンテーションを解消するには、ガーベジコレクション、メモリコンパクション、デフラグメンテーションなどを実行することになりますが、これらの処理は比較的時間がかかるのでその都度行うのは不適切です。</li></ul></div>#####qask#####<div class="sentence">複数のクライアントから接続されるサーバがある。このサーバのタスクの多重度が2以下の場合，タスク処理時間は常に4秒である。このサーバに1秒間隔で4件の処理要求が到着した場合，全ての処理が終わるまでの時間はタスクの多重度が1のときと2のときとで，何秒の差があるか。</div>/////qask/////<ul class="selectList"><li>6</li><li>7</li><li>8</li><li>9</li></ul>/////qask/////イ/////qask/////<div class="sentence" id="kaisetsu">タスクの多重度が1のときには、処理時間4秒のタスクを1つずつ処理していくので全件が完了するには「4秒×4＝16秒」を要します。<div class="img_margin"><img alt="19_1.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/19_1.gif"/></div>タスクの多重度が2になると、2つのタスクを並行して処理することができるので、下図のように9秒ですべての処理を完了することができます。<div class="img_margin"><img alt="19_2.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/19_2.gif"/></div>したがって多重度が1のときと2のときの差は「16秒－9秒＝7秒」になります。</div>#####qask#####<div class="sentence">FPGAの説明として，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>電気的に記憶内容の書換えを行うことができる不揮発性メモリ</li><li>特定の分野及びアプリケーション用に限定した特定用途向け汎用集積回路</li><li>浮動小数点数の演算を高速に実行する演算ユニット</li><li>論理回路を基板上に実装した後で再プログラムできる集積回路</li></ul>/////qask/////エ/////qask/////<div class="sentence" id="kaisetsu"><strong>FPGA</strong>(Field Programmable Gate Array)は、製品出荷後に利用者がハードウェア記述言語を用いて、現場で回路の配線やロジックを書き換えることができるプログラマブルな集積回路です。プログラム可能な論理モジュールを規則的に配置し、これらのモジュールを配線領域で相互接続して、論理回路を実装します。<br/><br/>用途が固定されているASICやASSPと比較して汎用性が高いので、様々な最終製品に使用することができます。チップ単価は高くなりがちですが、開発製造期間が短く済む、少量多品種生産に向くなどの特徴があります。プログラム方法として、SRAMセル方式、アンチヒューズ方式、EPROM方式、フラッシュメモリ内蔵方式などがあります。<br/><br/>「再プログラムできる」という記述より「エ」がFPGAの説明であることがわかります。<ul class="selectList"><li class="lia">EEPROMの説明です。</li><li class="lii">ASSP(Application Specific Standard Product)の説明です。</li><li class="liu">FPU(浮動小数点演算装置)の説明です。</li><li class="lie">正しい。FPGAの説明です。</li></ul></div>#####qask#####<div class="sentence">次の方式で画素にメモリを割り当てる640×480のグラフィックLCDモジュールがある。座標(x，y)で始点(5，4)から終点(9，8)まで直線を描画するとき，直線上のx＝7の画素に割り当てられたメモリのアドレスの先頭は何番地か。ここで，画素の座標は(x，y)で表すものとする。<br/><br/>〔方式〕<ul><li>メモリは0番地から昇順に使用する。</li><li>1画素は16ビットとする。</li><li>座標(0，0)から座標(639，479)までメモリを連続して割り当てる。</li><li>各画素は，x＝0からx軸の方向にメモリを割り当てていく。</li><li>x＝639の次はx＝0とし，yを1増やす。</li></ul><div class="img_margin"><img alt="21.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/21.gif"/></div></div>/////qask/////<ul class="selectList"><li>3847</li><li>7680</li><li>7694</li><li>8978</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu">まず、番地を求める対象である座標(7, 6)の画素が格納される位置を考えます。座標(7, 6)は8列7行目に位置し、メモリには上の行から順に格納されていくため、先頭から数えた順番は、<br/><br/>　640×6＋8＝3848(個目)<br/><br/>メモリの幅は8ビットで1画素は16ビットですので、1つの画素には2つの番地が割り当てられます。格納される順番ごとにメモリアドレスの先頭を考えてみると、1番目の画素はメモリの0番地、2番目は2番地、3番目は4番地、…、641番目(2行目先頭画素)は1280番地 になります。つまり、n番目の画素が割り当てられるメモリアドレスの先頭は「(n－1)×2番地」で表せます。<br/><br/>よって、先頭から3848番目のメモリアドレスの番地は、<br/><br/>　(3848－1)×2＝7694(番地)<br/><br/>したがって「ウ」が正解です。</div>#####qask#####<div class="sentence">アクチュエータの説明として，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>与えられた目標量と，センサーから得られた制御量を比較し，制御量を目標量に一致させるように操作量を出力する。</li><li>位置，角度，速度，加速度，力，温度などを検出し，電気的な情報に変換する。</li><li>エネルギー源からのパワーを，回転，直進などの動きに変換する。</li><li>マイクロフォン，センサーなどが出力する微小な電気信号を増幅する。</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu"><strong>アクチュエータ</strong>(Actuator)は、入力された電気信号を力学的な運動に変換する駆動機構で、機械や電気回路の構成要素です。制御システムにおいては、コントローラーから制御信号を受けとり制御対象に与える操作量を変化させる部位のことをいいます。<div class="img_margin"><img alt="22.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/22.gif"/></div><ul class="selectList"><li class="lia">フィードバック制御の説明です。</li><li class="lii">センサーの説明です。</li><li class="liu">正しい。アクチュエータの説明です。</li><li class="lie">アンプの説明です。</li></ul></div>#####qask#####<div class="sentence">マイクロプロセッサの耐タンパ性を向上させる手法として，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>ESD(Electrostatic Discharge)に対する耐性を強化する。</li><li>チップ検査終了後に検査用パッドを残しておく。</li><li>チップ内部を物理的に解析しようとすると，内部回路が破壊されるようにする。</li><li>内部メモリの物理アドレスを整然と配置する。</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu"><strong>耐タンパ性</strong>とは、ハードウェアやソフトウェアのセキュリティレベルを表す指標で、外部から内部データに対して行われる改ざん・解読・取出しなどの行為に対する耐性度合いを示します。タンパ（tamper）には「変更する」「改ざんする」「弄る」などの意味があります。<ul class="selectList"><li class="lia">静電気放電(ESD)によりプロセッサが破壊されるのを防ぐ対策です。ESD(Electrostatic Discharge)とは、回路が破壊されるおそれのある静電気放電のことなので、ESD対策をしても耐タンパ性は向上しません。</li><li class="lii">検査用パッドを介して内部データにアクセスされる可能性があるため耐タンパ性は低下します。</li><li class="liu">正しい。内部データの解析を防ぐ施策なので耐タンパ性は向上します。</li><li class="lie">内部プログラムの動作を解析されやすくなるため耐タンパ性は低下します。</li></ul></div>#####qask#####<div class="sentence">ユーザーインタフェースのユーザビリティを評価するときの，利用者が参加する手法と専門家だけで実施する手法の適切な組みはどれか。</div>/////qask/////<section class="roundBox"><div><img alt="24.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/24.gif"/></div></section>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu">ユーザビリティに関する標準規格であるJIS Z 8521では、ユーザビリティ(使用性)を「ある製品が，指定された利用者によって，指定された利用の状況下で，指定された目的を達成するために用いられる際の，有効さ，効率及び利用者の満足度の度合い」と定義しています。<br/>端的にいえばユーザビリティとは「利用者にとっての使いやすさ」のことです。<br/><br/>それぞれのユーザビリティ評価手法について確認しておきましょう。<dl><dt>アンケート(質問紙法)</dt><dd>専門家が用意した質問用紙を多数の利用者に配布し、記入したもらった回答を分析することで評価する手法。</dd><dt>回顧法</dt><dd>被験者にタスクを実行してもらい、専門家がその行動を観察し、事後の質問への回答とともに分析する手法。</dd><dt>思考発話法</dt><dd>被験者にタスクを実行してもらい、その操作を行っている間、考えたことや感じたことを口に出してもらうことで利用者の感じ方や思考を分析する手法。</dd><dt>認知的ウォークスルー法</dt><dd>複数の専門家が、設計仕様書や紙のプロトタイプを見ながら、対象となるユーザーの行動をシミュレーションしていくことで問題点を明らかにしていく手法。人の認知過程を基準にする。</dd><dt>ヒューリスティック評価法</dt><dd>複数の専門家が、設計仕様書や紙のプロトタイプを見ながら、既知の経験則に照らし合わせて問題点を明らかにする手法。ヒューリスティックとは「経験則」の意で、専門家の経験則を基準にする。</dd></dl>5つの評価手法を"利用者が参加する手法"と"専門家だけで実施する手法"に分類すると次のようになります。<dl><dt>利用者が参加する手法</dt><dd>アンケート、回顧法、思考発話法</dd><dt>専門家だけで実施する手法</dt><dd>認知的ウォークスルー法、ヒューリスティック評価法</dd></dl>したがって正しい組合せは「ウ」です。<div class="img_margin"><img alt="24a.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/24a.gif"/></div></div>#####qask#####<div class="sentence">レイトレーシング法の説明として，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>スクリーンの全ての画素について，視線と描画の対象となる物体との交点を反射属性や透明属性なども含めて計算し，その中から視点に最も近い交点を選択する。</li><li>スクリーンの走査線ごとに視点とその走査線を結ぶ走査面を作成し，各走査面と描画の対象となる物体との交差を調べて交差線分を求め，奥行き判定を行うことによって描画する。</li><li>描画の対象となる二つの物体のうち，一方が近くに，もう一方が遠くにあるときに，まず遠くの物体を描いてから近くの物体を重ね書きする。</li><li>描画の対象となる物体の各面をピクセルに分割し，ピクセルごとに視点までの距離を計算し，その最小値を作業領域に保持することによって，視点までの距離が最小となる面を求める。</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu"><strong>レイトレーシング法</strong>は、3DCGにおける陰線・陰面処理を行うためのアルゴリズムの一つです。陰線・陰面処理とは、最も手前に見える線や面のみを表示し、それ以外を表示しないようにする処理手順です。レイトレーシング法では、光源から放出され物体に反射して視点に到達する光線(レイ)を、逆に視点から物体へとさかのぼって追跡(トレース)し、物体での反射や透過、屈折による影響を計算することで、スクリーン上の画素ごとの表示値を決定します。視点とスクリーン上の画素を結んだ直線が最初にぶつかった物体の色を表示するというのが基本的な考え方です。<ul class="selectList"><li class="lia">正しい。レイトレーシング法の説明です。</li><li class="lii">スキャンライン法の説明です。</li><li class="liu">Zソート法の説明です。</li><li class="lie">Zバッファ法の説明です。</li></ul>参考URL: レンダリング方式について<br/>　<a href="https://blender3d.biz/knowledge_rendering_renderingmethods.html#Z%E3%82%BD%E3%83%BC%E3%83%88%E6%B3%95" target="_blank">https://blender3d.biz/knowledge_rendering_renderingmethods.html#Z%E3%82%BD%E3%83%BC%E3%83%88%E6%B3%95</a></div>#####qask#####<div class="sentence">CAP定理におけるAとPの特性をもつ分散システムの説明として，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>可用性と整合性と分断耐性の全てを満たすことができる。</li><li>可用性と整合性を満たすが分断耐性を満たさない。</li><li>可用性と分断耐性を満たすが整合性を満たさない。</li><li>整合性と分断耐性を満たすが可用性を満たさない。</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu"><strong>CAP定理</strong>は、分散処理システムにおいては、一貫性・可用性・分断耐性の3つの特性のうち、最大でも同時に2つまでしか満たすことができないとする定理です。本問の"整合性"は一貫性と同じ意味と考えてください。<dl><dt>一貫性（Consistency）</dt><dd>データの整合性が常に保たれていること</dd><dt>可用性（Availability）</dt><dd>利用したいときに求める分だけ利用できること</dd><dt>分断耐性（Partition Tolerance）</dt><dd>データを複数のサーバに分散して保管していること</dd></dl>一貫性と可用性を保証しようとすると必然的に単一のデータベースとなり、分断耐性がありません。また、一貫性と分断耐性を保証しようとすると、データベースの2相ロックや3相ロックが必要となり可用性が損なわれます（ロック中は利用できない）。そして、可用性と分断耐性を保証するシステムでは、ロックを掛けないので一貫性が損なわれます。<div class="img_margin"><img alt="26.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/26.gif"/></div>CAP定理において、Aは可用性、Pは分断耐性を示すので、「ウ」が適切な説明です。</div>#####qask#####<div class="sentence">ANSI/SPARC 3層スキーマモデルにおける内部スキーマの設計に含まれるものはどれか。</div>/////qask/////<ul class="selectList"><li>SQL問合せ応答時間の向上を目的としたインデックスの定義</li><li>エンティティ間の"1対多"，"多対多"などの関連を明示するE-Rモデルの作成</li><li>エンティティ内やエンティティ間の整合性を保つための一意性制約や参照制約の設定</li><li>データの冗長性を排除し，更新の一貫性と効率性を保持するための正規化</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu"><strong>ANSI/SPARC 3層スキーマ</strong>は、概念スキーマ、外部スキーマ、内部スキーマの3つのグループに分けてデータ定義を行うデータベースモデルで、物理的・論理的データの独立性を達成するためにDBMSがサポートすべきアーキテクチャとして提案されたものです。<dl><dt>概念スキーマ</dt><dd>データベース化対象の業務とデータの内容を論理的なデータモデルとして表現したもの。概念スキーマを記述するために記号系にはリレーショナルモデルの他にも、ネットワークモデル、階層型モデルなどがある。リレーショナルモデルではE-R図の作成、表定義、表の正規化が概念スキーマに相当する。</dd><dt>外部スキーマ</dt><dd>概念スキーマで定義されたデータモデル上に利用者ごとの目的に応じた見方を表現したもの。リレーショナルモデルのビューやネットワークモデルのサブスキーマが外部スキーマに相当する。</dd><dt>内部スキーマ</dt><dd>概念スキーマで定義されたデータモデルを記憶装置上にどのような形式で格納するかを表現したもの。ファイル編成やインデックスの設定などが内部スキーマに相当する。</dd></dl><ul class="selectList"><li class="lia">正しい。インデックスの定義は内部スキーマ設計に含まれます。</li><li class="lii">E-R図の作成は概念スキーマ設計に含まれます。</li><li class="liu">制約の設定は概念スキーマ設計に含まれます。</li><li class="lie">表の正規化は概念スキーマ設計に含まれます。</li></ul><div class="img_margin"><img alt="27.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/27.gif"/></div></div>#####qask#####<div class="sentence">第1，第2，第3正規形とリレーションの特徴a，b，cの組合せのうち，適切なものはどれか。<br/><br/><ol type="a"><li>どの非キー属性も，主キーの真部分集合に対して関数従属しない。</li><li>どの非キー属性も，主キーに推移的に関数従属しない。</li><li>繰返し属性が存在しない。</li></ol></div>/////qask/////<section class="roundBox"><div><img alt="28.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/28.gif"/></div></section>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu">第1、第2、第3正規形の条件は以下の通りです。ここで、関数従属とは一方の属性集合の値 (の集合) がもう一方の属性集合の値 (の集合) を一意に決定する関係のことをいいます。<dl><dt>第1正規形</dt><dd>全ての属性が単一値である状態</dd><dt>第2正規形</dt><dd>第1正規形を満たし、かつ、主キーに部分関数従属する（主キーの真部分集合に関数従属する）属性が存在しない状態</dd><dt>第3正規形</dt><dd>第2正規形を満たし、かつ、主キーからの推移的関数従属が存在しない状態</dd></dl>第1正規形がc，第2正規形がa，第3正規形がbなので、正しい組合せは「ウ」です。</div>#####qask#####<div class="sentence">undo/redo方式を用いた障害回復におけるログ情報の要否として，適切な組合せはどれか。</div>/////qask/////<section class="roundBox"><div><img alt="29.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/29.gif"/></div></section>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu"><strong>undo/redo方式</strong>は、データベースにシステム障害が起こったときに、更新前ログを使用したロールバック(undo)と更新後ログを使用したロールフォワード(redo)を組み合わせてデータベースを回復する方法です。undoは行った操作の取り消し、redoは行った操作の再実行という意味です。<br/><br/>障害発生時に進行中だったトランザクションは、一部の更新がディスクに反映されているので、ロールバックを実行してトランザクション開始前の状態に戻します（④）。チェックポイント後にコミットされたトランザクションは、ディスクからコミットの内容が失われているので、ロールフォワードを実行してデータベースにトランザクションの処理結果を反映させます（②③）。<div class="img_margin"><img alt="29a.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/29a.gif"/></div>更新前情報はundoで必要、更新後情報はredoで必要なので、正しい組合せは「ア」です。<br/><br/>なお、コミットするまでデータベースを一切更新しない遅延更新の管理機構ではロールバックが不要なので、障害回復時にredoのみを行いundoを行わない「no-undo/redo方式」が使われることもあります。</div>#####qask#####<div class="sentence">ビッグデータの利用におけるデータマイニングを説明したものはどれか。</div>/////qask/////<ul class="selectList"><li>蓄積されたデータを分析し，単なる検索だけでは分からない隠れた規則や相関関係を見つけ出すこと</li><li>データウェアハウスに格納されたデータの一部を，特定の用途や部門用に切り出して，データベースに格納すること</li><li>データ処理の対象となる情報を基に規定した，データの構造，意味及び操作の枠組みのこと</li><li>データを複数のサーバに複製し，性能と可用性を向上させること</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu"><strong>データマイニング</strong>(Data Mining)は、データウェアハウスに蓄積されている大量の生データに対して、統計学的手法、数学的手法、機械学習を適用することで、今まで明らかになっていなかった有用な規則性や因果関係を見つけ出す手法です。マイニング(Mining)には「採掘する」という意味があります。<br/><br/>従来はデータウェアハウスに適用されることが多かったデータマイニングですが、ビッグデータ時代の到来により、ビッグデータの分析や活用にも適用されるようになっています。<br/><br/>したがって「ア」が正解です。<ul class="selectList"><li class="lia">正しい。データマイニングの説明です。</li><li class="lii">データマートの説明です。</li><li class="liu">データモデルの説明です。</li><li class="lie">クラスタシステムの説明です。</li></ul></div>#####qask#####<div class="sentence">IPv6アドレスの表記として，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>2001:db8::3ab::ff01</li><li>2001:db8::3ab:ff01</li><li>2001:db8.3ab:ff01</li><li>2001.db8.3ab.ff01</li></ul>/////qask/////イ/////qask/////<div class="sentence" id="kaisetsu">IPv6アドレスのアドレス長は128ビットで、IPv4(32ビット)の4倍です。IPv4では32ビットを8ビットごとに区切り、それぞれを10進数で表したものを"."で連結していましたが、IPv6では128ビットを<em class="r">16ビット</em>ごとに区切り、それぞれを<em class="r">16進数</em>で表したものを"<em class="r">:</em>"で連結して記述します。<div class="img_margin"><img alt="31.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/31.gif"/></div>また、記述量を減らすために以下の2つの規則に従った短縮表記が可能となっています。<ul class="parenthesesList"><li class="li1">各16ビットセクションの先行する 0 を省略する。例えば、0012 は 12 になる。ただし、16ビットセクションが 0000 のときは 0 とする。</li><li class="li2">0 の16ビットセクションが連続する場合は、連続する2個のコロン(::)で表す。例えば、2001:0db8<u>:0000:0000:0000:</u>ff00:0042:8329 は 2001:db8<u>::</u>ff00:42:8329 と表す。ただし、:: は1か所にだけ使用できる。</li></ul><ul class="selectList"><li class="lia">"::"が2か所に使用されているので誤りです。</li><li class="lii">正しい。IPv6表記として適切です。</li><li class="liu">"."で連結している箇所があるので誤りです。</li><li class="lie">各16ビットセクションを"."で連結しているので誤りです。</li></ul></div>#####qask#####<div class="sentence">シリアル回線で使用するものと同じデータリンクのコネクション確立やデータ転送を，LAN上で実現するプロトコルはどれか。</div>/////qask/////<ul class="selectList"><li>MPLS</li><li>PPP</li><li>PPPoE</li><li>PPTP</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu"><ul class="selectList"><li class="lia">Multi Protocol Label Switchingの略。IP-VPNで使用される技術で、IPルーティングによるパケット転送よりも高速な転送処理を実現します。</li><li class="lii">Point-to-Point Protocolの略。電話回線を通じてコンピュータをネットワークに接続するダイヤルアップ接続でよく使われる、2点間を接続してデータ通信を行うための通信プロトコルです。</li><li class="liu">正しい。<strong>PPPoE</strong>(PPP over Ethernet)は、電話回線やISDNでインターネットを接続する際に使われるPPP(Point-to-Point Protocol)をイーサネット上で利用できるようにしたものです。PPPの機能であるユーザー認証やIPアドレスの割り当て等をイーサネット上で実現することができます。</li><li class="lie">Point-to-Point Tunneling Protocolの略。第2層のPPPパケットをIPパケットでトンネリングする方式で、暗号化機能や独自の利用者認証機能をもちます。マイクロソフト社によって開発されました。</li></ul></div>#####qask#####<div class="sentence">UDPを使用しているものはどれか。</div>/////qask/////<ul class="selectList"><li>FTP</li><li>NTP</li><li>POP3</li><li>TELNET</li></ul>/////qask/////イ/////qask/////<div class="sentence" id="kaisetsu"><strong>UDP</strong>(User Datagram Protocol)は、TCP/IPネットワークの通信処理で使われる伝送制御プロトコルのひとつで、コネクションを確立して通信の信頼性の確保を行うTCPと異なり「コネクションレス型」の通信を実現する伝送制御プロトコルです。送受されるパケットにコネクションの情報がない分だけTCPと比べデータ比率は高まることになるため、途中でデータが抜け落ちても問題が少ない音声や画像のストリーム形式での配信などで使用されています。<ul class="selectList"><li class="lia">File Transfer Protocolの略。TCPのポート20と21番を使用します。</li><li class="lii">正しい。NTP(Network Time Protocol)は、UDPのポート123番を使用します。</li><li class="liu">Post Office Protocol Version 3の略。TCPのポート110番を使用します。</li><li class="lie">Telecommunication networkの略。TCPのポート23番を使用します。</li></ul></div>#####qask#####<div class="sentence">IPv4で 192.168.30.32/28 のネットワークに接続可能なホストの最大数はどれか。</div>/////qask/////<ul class="selectList"><li>14</li><li>16</li><li>28</li><li>30</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu">設問のIPアドレス"192.168.30.32"の後方に付加されている"/28"は「アドレスプレフィックス」といい、先頭から何ビットまでがネットワークアドレスであるかを示す表記法です。<br/><br/>"/28"は、先頭から28ビット目までがネットワークアドレスであることを表しているので、ホストアドレスに割り当てることができるのは残る4ビットになります。4ビットで表現できるビット列は0000～1111の16種類ありますが、全てが0の"0000"と全てが1の"1111"は、それぞれネットワークアドレス、ブロードキャストアドレスとして予約されているためホストアドレスとして割り当てることはできません。<br/><br/>したがってホストの最大数は「16－2＝14」が適切です。</div>#####qask#####<div class="sentence">OpenFlowを使ったSDN(Software-Defined Networking)に関する記述として，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>インターネットのドメイン名を管理する世界規模の分散データベースを用いて，IPアドレスの代わりに名前を指定して通信できるようにする仕組み</li><li>携帯電話網において，回線交換方式ではなく，パケット交換方式で音声通話を実現する方式</li><li>ストレージ装置とサーバを接続し，WWN(World Wide Name)によってノードやポートを識別するストレージ用ネットワ ーク</li><li>データ転送機能とネットワーク制御機能を論理的に分離し，ネットワーク制御を集中的に行うことを可能にしたアーキテクチャ</li></ul>/////qask/////エ/////qask/////<div class="sentence" id="kaisetsu"><strong>SDN</strong>(Software-Defined Networking)は、ソフトウェア制御によって物理的なネットワーク構成にとらわれない動的で柔軟なネットワークを実現する技術全般を意味します。<br/><br/>SDNを実現するための技術標準が<strong>OpenFlow</strong>プロトコルであり、既存のネットワーク機器がもつ制御処理(コントロールプレーン)と転送処理(データプレーン)を分離することで、OpenFlowコントローラーが中央集権的に複数のスイッチの転送制御を管理します。OpenFlowではパケットやフレームをフローとして扱い、フローの様々な情報を使って柔軟に転送制御できるようになっています。スイッチはOpenFlowコントローラーと通信を行いながら、OpenFlowコントローラーから提供されるフローテーブルや直接の転送指示により転送先を判断します。<div class="img_margin"><img alt="35.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/35.gif"/></div><ul class="selectList"><li class="lia">DNS(Domain Name System)の説明です。</li><li class="lii">VoLTEの説明です。</li><li class="liu">SAN(Storage Area Network)の説明です。</li><li class="lie">正しい。OpenFlowによるSDNの説明です。</li></ul></div>#####qask#####<div class="sentence">複数のシステムやサービスの間で利用されるSAML(Security Assertion Markup Language)はどれか。</div>/////qask/////<ul class="selectList"><li>システムの負荷や動作状況に関する情報を送信するための仕様</li><li>脆弱性に関する情報や脅威情報を交換するための仕様</li><li>通信を暗号化し，VPNを実装するための仕様</li><li>認証や認可に関する情報を交換するための仕様</li></ul>/////qask/////エ/////qask/////<div class="sentence" id="kaisetsu"><strong>SAML</strong>(Security Assertion Markup Language：サムエル)は、XMLベースのメッセージのやり取りによって、複数のシステムやサービスの間で認証情報、属性情報、権限の認可情報を交換するための仕様です。標準化団体OASISによって策定されていて、2022年現在の最新バージョンは2005年にリリースのSAML2.0です。主に複数のドメインにまたがったセキュアなシングルサインオンを実現するための仕組みとして使用されています。<br/><br/>したがって「エ」が正解です。<br/><br/>SAMLでは様々な方法によるシングルサインオンが規定されていますが、その一つの基本的な流れは以下のとおりです。<ol><li>利用者がSP(Service Provider)にアクセスする</li><li>SPは利用者をIdP(Identity Provider)にリダイレクトする</li><li>IdPは利用者を認証し、デジタル署名が付いたSAMLアサーションを生成して、SAMLアサーションとともに利用者をSPにリダイレクトする</li><li>SPはSAMLアサーションのデジタル署名を検証し、SAMLアサーションの内容を確認する</li><li>SPは利用者をログインさせ、最初にアクセスがあったページにリダイレクトする</li></ol></div>#####qask#####<div class="sentence">サイバーキルチェーンの偵察段階に関する記述として，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>攻撃対象企業の公開Webサイトの脆弱性を悪用してネットワークに侵入を試みる。</li><li>攻撃対象企業の社員に標的型攻撃メールを送ってPCをマルウェアに感染させ，PC内の個人情報を入手する。</li><li>攻撃対象企業の社員のSNS上の経歴，肩書などを足がかりに，関連する組織や人物の情報を洗い出す。</li><li>サイバーキルチェーンの2番目の段階をいい，攻撃対象に特化したPDFやドキュメントファイルにマルウェアを仕込む。</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu"><strong>サイバーキルチェーン</strong>は、サイバー攻撃の手順を攻撃者の視点からいくつかの段階に分けモデル化したものです。攻撃の段階としては、偵察、武器化、配送、攻撃、インストール、遠隔操作、目的達成という7段階が一般的です。攻撃者の視点からサイバー攻撃を見ることで、各段階における防御策の立案に役立てることができます。多層防御を施すことでサイバーキルチェーンを断ち切ることが重要です。<dl><dt>偵察</dt><dd>標的に関する情報を収集して調査する</dd><dt>武器化</dt><dd>攻撃のためのマルウェアを用意する</dd><dt>配送</dt><dd>メールやWebサイトを使って標的にマルウェアを送信／配信する、または標的のシステムに侵入する</dd><dt>攻撃</dt><dd>標的がマルウェアを実行する</dd><dt>インストール</dt><dd>標的がマルウェアに感染する</dd><dt>遠隔操作</dt><dd>マルウェアを介して標的のサーバを操作可能になる</dd><dt>目的達成</dt><dd>秘密情報を得る、サービス停止、改ざんなど攻撃者の目的を達成する</dd></dl><ul class="selectList"><li class="lia">配送段階に関する記述です。</li><li class="lii">配送～目的達成段階に関する記述です。</li><li class="liu">正しい。偵察段階に関する記述です。</li><li class="lie">武器化段階に関する記述です。</li></ul></div>#####qask#####<div class="sentence">チャレンジレスポンス認証方式に該当するものはどれか。</div>/////qask/////<ul class="selectList"><li>固定パスワードを，TLSによる暗号通信を使い，クライアントからサーバに送信して，サーバで検証する。</li><li>端末のシリアル番号を，クライアントで秘密鍵を使って暗号化し，サーバに送信して，サーバで検証する。</li><li>トークンという装置が自動的に表示する，認証のたびに異なる数字列をパスワードとしてサーバに送信して，サーバで検証する。</li><li>利用者が入力したパスワードと，サーバから受け取ったランダムなデータとをクライアントで演算し，その結果をサーバに送信して，サーバで検証する。</li></ul>/////qask/////エ/////qask/////<div class="sentence" id="kaisetsu"><strong>チャレンジレスポンス方式</strong>は、通信経路上に固定パスワードを流さないようにすることで、盗聴によるパスワードの漏えいやリプレイアタックを防止する認証方式です。<br/><br/>チャレンジレスポンス方式では以下の手順で認証を行います。<ul class="parenthesesList"><li class="li1">サーバは、クライアントから要求があるたびに異なる乱数値(チャレンジ)を生成して保持するとともに、クライアントへ送る。</li><li class="li2">クライアントは、利用者が入力したパスワードと(1)でサーバから送られた"チャレンジ"から所定の方法でレスポンスを計算する。</li><li class="li3">クライアントは、(2)で生成した"レスポンス"と利用者が入力した利用者IDをサーバに送る。</li><li class="li4">サーバは、クライアントから受け取った利用者IDで利用者情報を検索して、取り出したパスワードと(1)で保持していた"チャレンジ"を用いてクライアントと同じ手順でレスポンスを生成する（レスポンス照合データ）。</li><li class="li5">サーバは、"レスポンス照合データ"とクライアントから受け取った"レスポンス"を比較し、両者が一致すれば認証成功とする。</li></ul><div class="img_margin"><img alt="38.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/38.gif"/></div><ul class="selectList"><li class="lia">チャレンジレスポンス方式では、固定パスワードとサーバから送信された乱数(チャレンジ)を組み合わせたものをハッシュ化又は暗号化してサーバに返信します。</li><li class="lii">端末のシリアル番号は送信しません。端末ごとに固有の番号を使用するといつも同じ認証データが使われることになるので、リプレイアタックを受ける可能性があります。</li><li class="liu">時刻同期式ワンタイムパスワードの説明です。チャレンジレスポンス方式ではトークンは不要です。</li><li class="lie">正しい。チャレンジレスポンス認証方式の特徴です。</li></ul></div>#####qask#####<div class="sentence">メッセージの送受信における署名鍵の使用に関する記述のうち，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>送信者が送信者の署名鍵を使ってメッセージに対する署名を作成し，メッセージに付加することによって，受信者が送信者による署名であることを確認できるようになる。</li><li>送信者が送信者の署名鍵を使ってメッセージを暗号化することによって，受信者が受信者の署名鍵を使って，暗号文を元のメッセージに戻すことができるようになる。</li><li>送信者が送信者の署名鍵を使ってメッセージを暗号化することによって，メッセージの内容が関係者以外に分からないようになる。</li><li>送信者がメッセージに固定文字列を付加し，更に送信者の署名鍵を使って暗号化することによって，受信者がメッセージの改ざん部位を特定できるようになる。</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu"><ul class="selectList"><li class="lia">正しい。デジタル署名の手順です。署名は、メッセージのダイジェストを送信者の秘密鍵で暗号化したものです。受信者は、まず署名を送信者の公開鍵でダイジェストに復号します。秘密鍵を所有するのはダイジェストを作成した送信者だけなので、正しく復号できれば送信者が署名をしたことを確認できます。</li><li class="lii">送信者の署名鍵(秘密鍵)で暗号化されたメッセージは、送信者の公開鍵でしか復号できません。暗号化通信で暗号化に使うのは受信者の公開鍵です。</li><li class="liu">署名鍵は秘密鍵です。秘密鍵で暗号化したメッセージは公開鍵を使えば誰でも復号することができてしまうので、メッセージの機密性を確保することはできません。</li><li class="lie">デジタル署名で確認できるのは改ざんがあったかどうかであり、改ざん部位の特定はできません。</li></ul></div>#####qask#####<div class="sentence">Webブラウザのcookieに関する設定と，それによって期待される効果の記述のうち，最も適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>サードパーティcookieをブロックする設定によって，当該Webブラウザが閲覧したWebサイトのコンテンツのキャッシュが保持されなくなり，閲覧したコンテンツが当該Webブラウザのほかの利用者に知られないようになる。</li><li>サードパーティcookieをブロックする設定によって，当該Webブラウザが複数のWebサイトを閲覧したときにトラッキングされないようになる。</li><li>ファーストパーティcookieを承諾する設定によって，当該WebブラウザがWebサイトの改ざんをcookieのハッシュ値を用いて検知できるようになる。</li><li>ファーストパーティcookieを承諾する設定によって，当該Webブラウザがデジタル証明書の失効情報を入手でき，閲覧中のWebサイトのデジタル証明書の有効性を確認できるようになる。</li></ul>/////qask/////イ/////qask/////<div class="sentence" id="kaisetsu">現在訪問しているWebサイトのドメインから発行されるクッキーがファーストパーティcookie、閲覧しているページ内の広告等の要素の配信とともに別ドメインから発行されるのがサードパーティcookie(第三者配信クッキー)です。<br/><br/>広告配信会社は、利用者の嗜好を把握して効果が高いと思われるターゲティング広告を配信するために、サードパーティcookieを利用して閲覧したWebサイトの情報を収集しています。クッキーによりWebサイトの閲覧履歴が収集されると、個人の興味や趣味、家族構成、住んでいる場所、年収や信条などが推測されてしまうことになり、これが行き過ぎた情報収集であるとしてプライバシー保護の観点から問題となっています。このような背景があり、Webブラウザの開発会社はサードパーティcookieを規制する動きを強めています。<ul class="selectList"><li class="lia">Webブラウザのシークレットモードやプライベートモードに関する記述です。cookieのブロックとWebブラウザ内の閲覧履歴の記録は無関係です。</li><li class="lii">正しい。サードパーティcookieをブロックすることで、サイトを横断したトラッキングをさせないようにできます。</li><li class="liu">cookieとWebサイトの改ざん検知は無関係です。</li><li class="lie">cookieとデジタル証明書の失効情報とは無関係です。失効情報は、WebブラウザがCRLを確認することによって自動的に行われています。</li></ul></div>#####qask#####<div class="sentence">クライアント証明書で利用者を認証するリバースプロキシサーバを用いて，複数のWebサーバにシングルサインオンを行うシステムがある。このシステムに関する記述のうち，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>クライアント証明書を利用者のPCに送信するのは，Webサーバではなく，リバースプロキシサーバである。</li><li>クライアント証明書を利用者のPCに送信するのは，リバースプロキシサーバではなく，Webサーバである。</li><li>利用者IDなどの情報をWebサーバに送信するのは，リバースプロキシサーバではなく，利用者のPCである。</li><li>利用者IDなどの情報をWebサーバに送信するのは，利用者のPCではなく，リバースプロキシサーバである。</li></ul>/////qask/////エ/////qask/////<div class="sentence" id="kaisetsu"><strong>リバースプロキシ型SSO</strong>は、複数のWebサーバと利用者PCとの間にリバースプロキシサーバを配置し、すべてのWebサーバへのアクセスをリバースプロキシサーバに集約することでシングルサインオンを実現する構成です。リバースプロキシサーバはアクセスしてきた利用者を認証し、認証に成功すればリバースプロキシサーバはWebサーバに代理アクセスして、結果を利用者に返します。<div class="img_margin"><img alt="41.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/41.gif"/></div><ul class="selectList"><li class="lia">クライアント証明書は利用者の認証に使うので、利用者のPCからリバースプロキシサーバに送信されます。</li><li class="lii">クライアント証明書は、PCからリバースプロキシサーバに送信されます。</li><li class="liu">利用者のPCとWebサーバが直接通信することはありません。</li><li class="lie">正しい。利用者がリバースプロキシサーバで認証を受けた場合、リバースプロキシサーバからWebサーバへ利用者IDなどの情報が送信されます。</li></ul></div>#####qask#####<div class="sentence">パスワードクラック手法の一種である，レインボー攻撃に該当するものはどれか。</div>/////qask/////<ul class="selectList"><li>何らかの方法で事前に利用者IDと平文のパスワードのリストを入手しておき，複数のシステム間で使い回されている利用者IDとパスワードの組みを狙って，ログインを試行する。</li><li>パスワードに成り得る文字列の全てを用いて，総当たりでログインを試行する。</li><li>平文のパスワードとハッシュ値をチェーンによって管理するテーブルを準備しておき，それを用いて，不正に入手したハッシュ値からパスワードを解読する。</li><li>利用者の誕生日や電話番号などの個人情報を言葉巧みに聞き出して，パスワードを類推する。</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu"><strong>レインボー攻撃</strong>は、レインボーテーブルと呼ばれる、ハッシュ値からパスワードを特定するための逆引き表を用いて、パスワードを高速に解読する手法です。レインボーテーブルは、使用される文字種と文字数の組合せごとに作成されます。<br/><br/>レインボーテーブル内では、パスワードとハッシュ値を数多くのチェーンとして管理しており、実際のテーブルにはチェーンの先頭であるパスワードと最後のハッシュ値だけを格納しておきます。<div class="img_margin"><img alt="42_1.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/42_1.gif"/></div><div class="img_margin"><img alt="42_2.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/42_2.gif"/></div>解読対象のハッシュ値を入手したら、チェーンの各位置からチェーン化で行ったのと同様の計算を施し、チェーンの最後のハッシュ値を計算します。これがレインボーテーブルに格納されているハッシュ値のいずれかと一致すれば、対応するパスワードが存在するチェーンがわかる仕組みになっています。<ul class="selectList"><li class="lia">パスワードリスト攻撃の説明です。</li><li class="lii">総当たり攻撃(ブルートフォースアタック)の説明です。</li><li class="liu">正しい。レインボー攻撃の説明です。</li><li class="lie">類推攻撃の説明です。</li></ul></div>#####qask#####<div class="sentence">JIS Q 27000:2019(情報セキュリティマネジメントシステム－用語)における"リスクレベル"の定義はどれか。</div>/////qask/////<ul class="selectList"><li>脅威によって付け込まれる可能性のある，資産又は管理策の弱点</li><li>結果とその起こりやすさの組合せとして表現される，リスクの大きさ</li><li>対応すべきリスクに付与する優先順位</li><li>リスクの重大性を評価するために目安とする条件</li></ul>/////qask/////イ/////qask/////<div class="sentence" id="kaisetsu"><ul class="selectList"><li class="lia">脆弱性の定義です。</li><li class="lii">正しい。リスクレベルの定義です。リスクは影響度と発生確率の積で大きさを見積もります。</li><li class="liu">この記述に対応する用語はありません。</li><li class="lie">リスク基準の定義です。</li></ul></div>#####qask#####<div class="sentence">内部ネットワークのPCからインターネット上のWebサイトを参照するときに，DMZに設置したVDI(Virtual Desktop Infrastructure)サーバ上のWebブラウザを利用すると，未知のマルウェアがPCにダウンロードされるのを防ぐというセキュリティ上の効果が期待できる。この効果を生み出すVDIサーバの動作の特徴はどれか。</div>/////qask/////<ul class="selectList"><li>Webサイトからの受信データを受信処理した後，IPsecでカプセル化し，PCに送信する。</li><li>Webサイトからの受信データを受信処理した後，実行ファイルを削除し，その他のデータをPCに送信する。</li><li>Webサイトからの受信データを受信処理した後，生成したデスクトップ画面の画像データだけをPCに送信する。</li><li>Webサイトからの受信データを受信処理した後，不正なコード列が検知されない場合だけPCに送信する。</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu"><strong>VDI</strong>(Virtual Desktop Infrastructure)は、サーバ内にクライアントごとの仮想マシンを用意して仮想デスクトップ環境を構築する技術です。利用者はネットワークを通じてVDIサーバ上の仮想デスクトップ環境に接続し、クライアントPCにはVDIサーバからの操作結果画面のみが転送される仕組みになっています。<div class="img_margin"><img alt="44.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/44.gif"/></div>この仕組みにより、クライアントがインターネット上のサイトと直接的な通信を行わなくなるので、クライアントPCをインターネットから分離できます。もし利用者の操作により不正なマルウェアをダウンロードしてしまったとしても、それが保存されるのはVDIサーバ上の仮想環境ですので、クライアントPCへの感染を防げます。汚染された仮想環境を削除してしまえば内部ネットワークへの影響もありません。<br/><br/>VDIサーバからPCに送信されるのは「デスクトップ画面の画像データ」のみです。したがって正解は「ウ」です。</div>#####qask#####<div class="sentence">ファジングに該当するものはどれか。</div>/////qask/////<ul class="selectList"><li>サーバにFINパケットを送信し，サーバからの応答を観測して，稼働しているサービスを見つけ出す。</li><li>サーバのOSやアプリケーションソフトウェアが生成したログやコマンド履歴などを解析して，ファイルサーバに保存されているファイルの改ざんを検知する。</li><li>ソフトウェアに，問題を引き起こしそうな多様なデータを入力し，挙動を監視して，脆弱性を見つけ出す。</li><li>ネットワーク上を流れるパケットを収集し，そのプロトコルヘッダやペイロードを解析して，あらかじめ登録された攻撃パターンと一致するものを検出する。</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu"><strong>ファジング</strong>(fuzzing)とは、検査対象のソフトウェア製品に「ファズ（英名：fuzz）」と呼ばれる問題を引き起こしそうなデータを大量に送り込み、その応答や挙動を監視することで(未知の)脆弱性を検出する検査手法です。<div class="img_margin"><img alt="45.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/45.gif"/></div>ファジングは、ファズデータの生成、検査対象への送信、挙動の監視を自動で行うファジングツール(ファザー)と呼ばれるソフトウェアを使用して行います。開発ライフサイクルにファジングを導入することで「バグや脆弱性の低減」「テストの自動化・効率化によるコスト削減」が期待できるため、大手企業の一部で徐々に活用され始めています。<ul class="selectList"><li class="lia">ポートスキャンの説明です。</li><li class="lii">ログ分析の説明です。</li><li class="liu">正しい。ファジングの説明です。</li><li class="lie">パターンマッチングの説明です。</li></ul></div>#####qask#####<div class="sentence">モジュールの独立性の尺度であるモジュール結合度は，低いほど独立性が高くなる。次のうち，モジュールの独立性が最も高い結合はどれか。</div>/////qask/////<ul class="selectList"><li>外部結合</li><li>共通結合</li><li>スタンプ結合</li><li>データ結合</li></ul>/////qask/////エ/////qask/////<div class="sentence" id="kaisetsu"><strong>モジュール結合度</strong>とは、モジュール同士の関連性の強さを表し、モジュール結合度が弱いほど関連するモジュールに変更があった場合の影響を受けにくくなるので、モジュールの独立性が高まり保守性が向上します。<br/><br/>モジュール結合度は、モジュール間で行うデータ受け渡しの方法などにより全部で6段階のレベルに分類されます。<dl><dt>データ結合(結合が弱い↑)</dt><dd>処理に必要なデータだけを単一のパラメータとして受け渡している。</dd><dt>スタンプ結合</dt><dd>処理に必要なデータだけをレコードや構造体などのデータ構造として受け渡している。</dd><dt>制御結合</dt><dd>もう１つのモジュールの制御要素を受け渡している。</dd><dt>外部結合</dt><dd>外部宣言された共通データを参照している。</dd><dt>共通結合</dt><dd>共通域に宣言された共通データを参照している。</dd><dt>内容結合(結合が強い↓)</dt><dd>お互いのモジュール内部を直接参照・分析している。</dd></dl>モジュールの独立性が最も高くなるのは、結合度が最も低い「データ結合」になります。</div>#####qask#####<div class="sentence">次の流れ図において，判定条件網羅(分岐網羅)を満たす最少のテストケースはどれか。<div class="img_margin"><img alt="47.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/47.gif"/></div></div>/////qask/////<ul class="selectList"><li>(1) A＝0，B＝0　(2) A＝1，B＝1</li><li>(1) A＝1，B＝0　(2) A＝1，B＝1</li><li>(1) A＝0，B＝0　(2) A＝1，B＝1　(3) A＝1，B＝0</li><li>(1) A＝0，B＝0　(2) A＝0，B＝1　(3) A＝1，B＝0</li></ul>/////qask/////イ/////qask/////<div class="sentence" id="kaisetsu"><b>ホワイトボックステスト</b>における網羅性のレベルである「判定条件網羅」とは、プログラム中の分岐の判定条件において、結果が真となる場合、偽となる場合を少なくとも1回は実行するようにテストケースを設計することです。<ul class="selectList"><li class="lia">(1)は、1つ目の分岐ではA=0・B=0なのでNo、2つ目の分岐もA=0・C=2なのでNoです。(2)は、1つ目の分岐でA=1・B=1なのでNo、2つ目の分岐もA=1・C=2なのでNoです。<br/>どちらの判定条件においても「Yes」に分岐しないので誤りです。<div class="img_margin"><img alt="47a.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/47a.gif"/></div></li><li class="lii">正しい。(1)は、1つ目の分岐ではA=1・B=0なのでYes、2つ目の分岐もA=1・C=1なのでYesです。(2)は、1つ目の分岐でA=1・B=1なのでNo、2つ目の分岐もA=1・C=2なのでNoです。<br/>分岐網羅を満たしており、無駄がないので最少のテストケースとなります。<div class="img_margin"><img alt="47i.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/47i.gif"/></div></li><li class="liu">(1)は、1つ目の分岐ではA=0・B=0なのでNo、2つ目の分岐もA=0・C=2なのでNoです。(2)は、1つ目の分岐でA=1・B=1なのでNo、2つ目の分岐もA=1・C=2なのでNoです。(3)は、1つ目の分岐ではA=1・B=0なのでYes、2つ目の分岐もA=1・C=1なのでYesです。<br/>分岐網羅を満たしますが、テストケース(1)と(2)は冗長です。どちらか1つあれば十分なので最少ではありません。<div class="img_margin"><img alt="47u.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/47u.gif"/></div></li><li class="lie">(1)は、1つ目の分岐ではA=0・B=0なのでNo、2つ目の分岐もA=0・C=2なのでNoです。(2)は、1つ目の分岐でA=0・B=1なのでNo、2つ目の分岐もA=0・C=2なのでNoです。(3)は、1つ目の分岐ではA=1・B=0なのでYes、2つ目の分岐もA=1・C=1なのでYesです。<br/>分岐網羅を満たしますが、テストケース(1)と(2)は冗長です。どちらか1つあれば十分なので最少ではありません。<div class="img_margin"><img alt="47e.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/47e.gif"/></div></li></ul>なお、網羅性のレベルには判定条件網羅の他にも次のようなものあります。<dl><dt>命令網羅(網羅性:低い↑)</dt><dd>すべての命令を少なくとも1回は実行するテストケースを設計する。</dd><dt>分岐網羅(判定条件網羅)</dt><dd>判定条件の真偽を少なくとも1回は実行するテストケースを設計する。</dd><dt>条件網羅</dt><dd>判定条件が複数ある場合に、それぞれの条件が真・偽の場合を組み合わせたテストケースを設計する。</dd><dt>判定条件・条件網羅</dt><dd>判定条件網羅と条件網羅を組み合わせてテストケースを設計する。</dd><dt>複数条件網羅(網羅性:高↓)</dt><dd>判定条件のすべての可能な結果の組合せを網羅し、かつ、すべての命令を少なくとも1回は実行するようにテストケースを作成する。</dd></dl></div>#####qask#####<div class="sentence">問題は発生していないが，プログラムの仕様書と現状のソースコードとの不整合を解消するために，リバースエンジニアリングの手法を使って仕様書を作成し直す。これはソフトウェア保守のどの分類に該当するか。</div>/////qask/////<ul class="selectList"><li>完全化保守</li><li>是正保守</li><li>適応保守</li><li>予防保守</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu">JIS X 0161によれば、システムやソフトウェアに対する保守は、その目的により、「訂正」の性質をもつ是正保守と予防保守、「改良」の性質をもつ適応保守と完全化保守の4つの類型に分けられます。<div class="img_margin"><img alt="48.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/48.gif"/></div><dl><dt>是正保守</dt><dd>ソフトウェア製品の引渡し後に発見された問題を訂正するために行う受身の修正</dd><dt>予防保守</dt><dd>引渡し後のソフトウェア製品の潜在的な障害が運用障害になる前に発見し、是正を行うための修正</dd><dt>適応保守</dt><dd>引渡し後、変化した又は変化している環境において、ソフトウェア製品を使用できるように保ち続けるために実施する修正</dd><dt>完全化保守</dt><dd>引渡し後のソフトウェア製品のパフォーマンスや保守性を向上させるための修正。機能追加や変更、性能強化、プログラム文書の改善などを含む</dd></dl>設問の事例では、現状のソースコードに仕様書を合わせるための変更を行います。システム上の問題はありませんが、より完全な状態を目指して行われる保守ですので完全化保守に分類されます。したがって「ア」が正解です。</div>#####qask#####<div class="sentence">アジャイル開発の手法の一つであるスクラムにおいて，決められた期間におけるスクラムチームの生産量を相対的に表現するとき，尺度として用いるものはどれか。</div>/////qask/////<ul class="selectList"><li>スプリント</li><li>スプリントレトロスペクティブ</li><li>バックログ</li><li>ベロシティ</li></ul>/////qask/////エ/////qask/////<div class="sentence" id="kaisetsu"><ul class="selectList"><li class="lia">スプリントは、スクラム開発における反復の単位です。</li><li class="lii">レトロスペクティブ(ふりかえり)は、スプリント内で実施したことや起きたことを最後にチーム全員でふりかえり、開発プロセス、コミュニケーション、その他様々な活動をよりよくする改善案を皆で考えることをいいます。</li><li class="liu">バックログは、開発対象のシステムやソフトウェアで実現されるべき要求機能や要素をまとめたものです。</li><li class="lie">正しい。ベロシティは、チームが1回のイテレーションで完了させたユーザーストーリーのストーリーポイントの合計値、すなわち開発生産性を表します。ざっくり言えば、1スプリントにおける開発量のことです。</li></ul></div>#####qask#####<div class="sentence">ソフトウェア開発に使われるIDEの説明として，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>エディタ，コンパイラ，リンカ，デバッガなどが一体となったツール</li><li>専用のハードウェアインタフェースでCPUの情報を取得する装置</li><li>ターゲットCPUを搭載した評価ボードなどの実行環境</li><li>タスクスケジューリングの仕組みなどを提供するソフトウェア</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu"><strong>IDE</strong>(Integrated Development Environment)は、統合開発環境とも呼ばれ、エディタ、コンパイラ、リンカ、デバッガ、バージョン管理などのソフトウェアの開発に必要なツールがまとめられ、ひとつの環境でコーディング、デバッグ、ビルドまでの一連の作業を行えるようにしたものです。GUI環境に対応したグラフィカルな開発環境を提供する製品がほとんどです。代表的なものとして、Java開発のEclipse、macOS/iOSアプリ開発のXcode、Androidアプリ開発のAndroid Studio、Microsoft Visual Studioなどがあります。<br/><br/>したがって「ア」の説明が適切です。<ul class="selectList"><li class="lia">正しい。IDEの説明です。</li><li class="lii">インサーキットエミュレーターの説明です。ハードウェア上でソフトウェアの動作をエミュレートし、ハードウェアとソフトウェアの統合テストとデバッグを支援します。</li><li class="liu">ターゲットボードの説明です。実際のハードウェアを模倣し、ソフトウェアの実行とデバッグを実際のハードウェアで行うために使用されます。</li><li class="lie">RTOS(Real-Time Operating System)の説明です。</li></ul><div class="img_margin"><img alt="50.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/50.gif"/></div></div>#####qask#####<div class="sentence">ある組織では，プロジェクトのスケジュールとコストの管理にアーンドバリューマネジメントを用いている。期間10日間のプロジェクトの，5日目の終了時点の状況は表のとおりである。この時点でのコスト効率が今後も続くとしたとき，完成時総コスト見積り(EAC)は何万円か。<div class="img_margin"><img alt="51.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/51.gif"/></div></div>/////qask/////<ul class="selectList"><li>110</li><li>120</li><li>135</li><li>150</li></ul>/////qask/////エ/////qask/////<div class="sentence" id="kaisetsu"><strong>アーンドバリューマネジメント</strong>(EVM:Earned Value Management)は、プロジェクトにおける作業を金銭の価値に置き換えて定量的に実績管理をする進捗管理手法で、PV、EV、ACという3つの指標を用いることが特徴です。<dl><dt>PV(Planned Value)</dt><dd>プロジェクト開始当初、現時点までに計画されていた作業に対する予算</dd><dt>EV(Earned Value)</dt><dd>現時点までに完了した作業に割り当てられていた予算</dd><dt>AC(Actual Cost)</dt><dd>現時点までに完了した作業に対して実際に投入した総コスト</dd></dl>各指標を比較して、EV－ACがマイナス値であれば完了済み作業に対する予算よりも投入コストが多いのでコスト超過、EV－PVがマイナス値であれば完了済み作業に対する予算が当初の予算よりも少ないので進捗遅れ、と判断することができます。<br/><br/><strong>完成時総コスト見積り</strong>(EAC:Estimate At Completion)は、完了済作業に要した総コスト(AC)に残作業に要するコスト(ETC:Estimate To Complete)を足した、プロジェクト終了時の総コストの予測値です。<br/>設問の事例では、5日目終了時点で、EV(完了済み作業に対する予算)40万円の作業に対してAC(実コスト)60万円となっていて、プロジェクト予算の1.5倍の実コストが発生しています。このため現状のコスト効率が完成時まで続くならば、完成時総コスト見積り(EAC)は表にある完成時総予算100万円の1.5倍である<em class="r">150</em>万円になると見込めます。よって「エ」が正解です。<br/><br/>なお、EVMには完成時総コスト見積り(EAC)を求める公式があるため、厳密にはこれに従って計算します。<br/><br/>　完成時総コスト見積り(EAC)＝AC＋ETC<br/>　残作業のコスト見積り(ETC)＝(BAC－EV)÷CPI<br/>　コスト効率指数(CPI)＝EV÷AC<br/><br/>設問では、BAC＝100万円、EV＝40万円、AC＝60万円なので、<br/><br/>　BAC＝100万円<br/>　CPI＝EV÷AC＝40÷60＝2／3<br/>　ETC＝(100－40)÷2／3＝90万円<br/>　EAC＝60＋90＝150万円<br/><br/>また、この設問の事例のように現時点までのコスト効率がプロジェクト終了まで続くのであれば、「EAC＝BAC÷CPI」で単純に求められるので、<br/><br/>　CPI＝40÷60＝2／3<br/>　EAC＝100÷2／3＝150万円</div>#####qask#####<div class="sentence">プロジェクトのスケジュールを短縮するために，アクティビティに割り当てる資源を増やして，アクティビティの所要期間を短縮する技法はどれか。</div>/////qask/////<ul class="selectList"><li>クラッシング</li><li>クリティカルチェーン法</li><li>ファストトラッキング</li><li>モンテカルロ法</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu">プロジェクトの所要時間を短縮する方法は「クラッシング」と「ファストトラッキング」に大別されます。<dl><dt>クラッシング</dt><dd>メンバの時間外勤務を増やしたり、業務内容に精通したメンバを新たに増員するなど、クリティカルパス上のアクティビティに資源を追加投入して短縮を図る。</dd><dt>ファストトラッキング</dt><dd>全体の設計が完了する前に、仕様が固まっているモジュールの開発を開始するなど、当初の計画では順番に行う予定だったアクティビティを並行して行うことによって短縮を図る。</dd></dl><ul class="selectList"><li class="lia">正しい。<strong>クラッシング</strong>は、プロジェクトのスコープはそのままに、コストを追加投入することでプロジェクト全体のスケジュールを短縮させる方法です。業務内容に精通したメンバの増員や時間外勤務の拡大などがこれに該当します。</li><li class="lii">クリティカルチェーン法は、クリティカルパス法をベースに人員・設備などのリソース制限の考慮を加えたスケジュール技法です。</li><li class="liu">ファストトラッキングは、開始当初の計画では直列に並んでいた作業を分割し、同時並行的に行うことで期間短縮を図る方法です。</li><li class="lie">モンテカルロ法は、プロジェクトコストや所要期間の確率分布をもとに乱数を用いて反復的にシミュレーションを行うことで、コストや所要日数を予測する手法です。</li></ul></div>#####qask#####<div class="sentence">ソフトウェア開発プロジェクトにおいて，表の全ての作業を完了させるために必要な期間は最短で何日間か。<div class="img_margin"><img alt="53.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/53.gif"/></div></div>/////qask/////<ul class="selectList"><li>80</li><li>95</li><li>100</li><li>120</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu">作業の先後関係に注意しながら設問の表をアローダイアグラムに変換すると以下のようになります。<div class="img_margin"><img alt="53a.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/53a.gif"/></div>並行作業となる部分に注目すると、利用者マニュアル作成(20日)よりも製造(25日)＋テスト(15日)の方が日数を要するので、クリティカルパスは「要件定義→設計→製造→テスト→利用者教育」、最短所要日数は「30＋20＋25＋15＋10＝100日」です。したがって「ウ」が正解となります。</div>#####qask#####<div class="sentence">プロジェクトのコンティンジェンシー計画において決定することとして，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>あらかじめ定義された，ある条件のときにだけ実行する対応策</li><li>活動リストの活動ごとに必要な資源</li><li>プロジェクトに適用する品質の要求事項及び規格</li><li>プロジェクトのステークホルダの情報及びコミュニケーションのニーズ</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu">プロジェクトマネジメントにおける<strong>コンティンジェンシー計画</strong>とは、プロジェクトが抱える潜在的なリスクが現実化した際に、プロジェクトが被る損害を最小限にとどめ、速やかにその緊急事態の克服を図るための手続きが記述された対応計画のことです。コンティンジェンシー計画は、既知のリスクに対する対応計画の一部として策定され、ある事象が起きた場合に限り使用するものなので、発動条件となる事象とそのとき実行する対応策を記述します。<br/><br/>したがって「ア」の記述が適切です。<ul class="selectList"><li class="lia">正しい。コンティンジェンシー計画において決定することです。</li><li class="lii">資源の見積りにおいて決定することです。</li><li class="liu">品質の計画において決定することです。</li><li class="lie">コミュニケーションの計画において決定することです。</li></ul></div>#####qask#####<div class="sentence">あるシステムにおけるデータ復旧の要件が次のとおりであるとき，データのバックアップは最長で何時間ごとに取得する必要があるか。<br/><br/>〔データ復旧の要件〕<ul><li>RTO(目標復旧時間)：3時間</li><li>RPO(目標復旧時点)：12時間前</li></ul> </div>/////qask/////<ul class="selectList"><li>3</li><li>9</li><li>12</li><li>15</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu"><strong>RTO</strong>(Recovery Time Objective)は、企業が不測の事態に陥った際に「いつまでに復旧するのか」という時間的な目標のこと、<strong>RPO</strong>(Recovery Point Objective)は、「いつの時点のデータまで復元する必要があるか」という目標です。<br/><br/>本問の要件だと、障害が発生した場合に3時間以内に少なくとも障害発生12時間前の時点のデータまで復旧するということです。12時間前の状態に戻すには12時間以内に取得したバックアップがあればよいので、データのバックアップ頻度は最長で12時間ごととなります。<br/><br/>したがって「ウ」が正解です。</div>#####qask#####<div class="sentence">ITIL 2011 editionでは，可用性管理における重要業績評価指標(KPI)の例として，"保守性を表す指標値"の短縮を挙げている。保守性を表す指標に該当するものはどれか。</div>/////qask/////<ul class="selectList"><li>一定期間内での中断の数</li><li>平均故障間隔</li><li>平均サービス・インシデント間隔</li><li>平均サービス回復時間</li></ul>/////qask/////エ/////qask/////<div class="sentence" id="kaisetsu"><strong>保守性</strong>とは、ITサービスその他の構成アイテムをどの程度迅速かつ効果的に通常の稼働状態に戻せるのかを表す指標です。ダウン状態から早く回復できる構成要素ほど、保守性が高いと表現します。簡単に言うとダウンタイムがどれだけ短いかということです。<br/><br/>ITサービスマネジメントでは、通常、システムが停止してからユーザーが利用できるようになるまでの平均時間である「平均サービス回復時間（MTRS）」が保守性を測る指標として使用されます。<br/><br/>したがって正解は「エ」です。<ul class="selectList"><li class="lia">可用性を表す指標です。</li><li class="lii">信頼性を表す指標です。</li><li class="liu">信頼性を表す指標です。</li><li class="lie">正しい。保守性を表す指標です。</li></ul></div>#####qask#####<div class="sentence">基幹業務システムの構築及び運用において，データ管理者(DA)とデータベース管理者(DBA)を別々に任命した場合のDAの役割として，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>業務データ量の増加傾向を把握し，ディスク装置の増設などを計画して実施する。</li><li>システム開発の設計工程では，主に論理データベース設計を行い，データ項目を管理して標準化する。</li><li>システム開発のテスト工程では，主にパフォーマンスチューニングを担当する。</li><li>システム障害が発生した場合には，データの復旧や整合性のチェックなどを行う。</li></ul>/////qask/////イ/////qask/////<div class="sentence" id="kaisetsu"><strong>データ管理者</strong>（DA）と<strong>データベース管理者</strong>（DBA）は、データベースの管理を専門的に扱う職種です。<dl><dt>データ管理者（DA:Data Administrator）</dt><dd>業務の実世界から概念設計、システム化の範囲で論理設計などデータそのものの管理を行う。</dd><dt>データベース管理者（DBA:DataBase Administrator）</dt><dd>DAが設計した論理データモデルから物理設計を行い、データベースを構築したり、構築後のデータベースの運用設計および運用保守などデータベースの管理を行う。</dd></dl>選択肢の中では、「主に論理データベース設計を行い」という部分から「イ」がデータ管理者(DA)の役割であることがわかります。その他の選択肢はデータベース管理者(DBA)の役割です。</div>#####qask#####<div class="sentence">事業継続計画(BCP)について監査を実施した結果，適切な状況と判断されるものはどれか。</div>/////qask/////<ul class="selectList"><li>従業員の緊急連絡先リストを作成し，最新版に更新している。</li><li>重要書類は複製せずに，1か所で集中保管している。</li><li>全ての業務について，優先順位なしに同一水準のBCPを策定している。</li><li>平時にはBCPを従業員に非公開としている。</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu"><strong>BCP</strong>(Business Continuity Plan)は、予期せぬ重大災害が発生した場合に、必要最低限の事業を継続しつつ、業務を早期に復旧・再開できるようにするための行動計画です。事業継続計画(BCP)の監査では、中小企業庁の「中小企業BCP策定運用指針」や経済産業省の「事業継続計画策定ガイドライン」を判断の尺度として使うことができます。<ul class="selectList"><li class="lia">正しい。緊急連絡網の構築は、災害発生後に迅速に行動を開始するための情報伝達手段として必要です。よって、適切な状況です。</li><li class="lii">企業の存続に関わる文書や代替情報が他に求められない文書(バイタルレコードと呼ばれる)は、複製化や分散管理を行い緊急時にすぐに参照できるようにする必要があります。</li><li class="liu">通常、災害により何らかの被害が発生すれば、すべての業務を行うことは困難となるため、重要な業務から優先順位をつけて継続するように策定することが実践的です。</li><li class="lie">事業継続を実践するためには、経営者をはじめとする全従業員が事業継続の重要性を共通の認識として持つこと、つまり「文化」として定着していることが大切です。こういった観点からも平時から教育・訓練を継続的に実施する必要があります。</li></ul></div>#####qask#####<div class="sentence">監査調書に関する記述のうち，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>監査調書には，監査対象部門以外においても役立つ情報があるので，全て企業内で公開すべきである。</li><li>監査調書の役割として，監査実施内容の客観性を確保し，監査の結論を支える合理的な根拠とすることなどが挙げられる。</li><li>監査調書は，通常，電子媒体で保管されるが，機密保持を徹底するためバックアップは作成すべきではない。</li><li>監査調書は監査の過程で入手した客観的な事実の記録なので，監査担当者の所見は記述しない。</li></ul>/////qask/////イ/////qask/////<div class="sentence" id="kaisetsu"><ul class="selectList"><li class="lia">監査調書は、後から容易に参照、活用できるように保管されますが、組織体の重要情報や機密情報が含まれていることが一般的ですので、監査調書の受け渡しや持ち出し等のルールを定めるとともに、未承認アクセスに対する防止対策、監査調書の散逸、改ざん等に十分に留意しなければなりません。</li><li class="lii">正しい。監査調書は、実施内容の客観性等を確保するとともに、監査の結論に至った過程を明らかにし、監査の結論を支える合理的な根拠とするために作成されます。</li><li class="liu">監査調書は、システム監査人が実施した監査のプロセスを記録したものであり、かつ、監査の結論の基礎となる重要な書類なので適切に保管する必要があります。通常、電子媒体で保管されることから、適切なバックアップ対策を講じる必要があります。</li><li class="lie">システム監査基準(平成30年)においては、監査調書に通常記載される事項として次の6つを挙げています。<ol><li>監査実施者及び実施日時</li><li>監査の目的</li><li>実施した監査手続</li><li>入手した監査証拠</li><li>システム監査人が発見した事実（事象、原因、影響範囲等）及び<em class="m">発見事実に関するシステム監査人の所見</em></li><li>監査調書のレビューが行われた場合には、レビューアの氏名及びレビュー日</li></ol>監査担当者の所見が記載されることもあるので、本肢は誤りです。</li></ul></div>#####qask#####<div class="sentence">監査証拠の入手と評価に関する記述のうち，システム監査基準(平成30年)に照らして，<u>適切でないもの</u>はどれか。</div>/////qask/////<ul class="selectList"><li>アジャイル手法を用いたシステム開発プロジェクトにおいては，管理用ドキュメントとしての体裁が整っているものだけが監査証拠として利用できる。</li><li>外部委託業務実施拠点に対する監査において，システム監査人が委託先から入手した第三者の保証報告書に依拠できると判断すれば，現地調査を省略できる。</li><li>十分かつ適切な監査証拠を入手するための本調査の前に，監査対象の実態を把握するための予備調査を実施する。</li><li>一つの監査目的に対して，通常は，複数の監査手続を組み合わせて監査を実施する。</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu"><ul class="selectList"><li class="lia"><em class="m">適切ではないものなので正解肢です</em>。<br/>アジャイル開発では精密な管理ドキュメントの作成が重視されないので、システム監査を行う際に監査証拠の入手が困難なことがあります。<br/>システム監査基準では「必ずしも管理用ドキュメントとしての体裁が整っていなくとも監査証拠として利用できる場合があることに留意する」とし、ホワイトボードに記載されたスケッチの画像データや開発現場で作成された付箋紙などの体裁が整っていないものを、必要に応じて監査証拠とする例を挙げています。</li><li class="lii">システム監査基準では、外部委託業務実施拠点に対する現地調査について「委託先が第三者による保証又は認証を受けており、当該保証等報告書に依拠し、上記手続の一部を省略する場合、当該第三者の能力、客観性及び専門職としての正当な注意について検討を行った上で、委託業務の重要性とリスクを勘案する必要がある」としています。<br/>外部委託業務実施拠点に監査を行った第三者の能力等、委託業務の重要性とリスクに問題がなければ、保証等報告書を根拠に当該拠点の現地調査の全部または一部を省略できます。</li><li class="liu">予備調査(事前調査)は「監査対象の実態を把握するため」、本調査は「予備調査で得た情報を踏まえて、十分かつ適切な監査証拠を入手するため」に実施されます。</li><li class="lie">システム監査基準では「監査手続は、それぞれ単独で実施される場合もあるが、通常は、一つの監査目的に対して複数の監査手続の組み合わせによって構成される」としています。</li></ul></div>#####qask#####<div class="sentence">システム管理基準(平成30年)によれば，ITシステムの運用・利用におけるログ管理に関する記述のうち，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>取得したログは，不正なアクセスから保護し，内容が改ざんされないように保管する。</li><li>通常の運用範囲を超えたアクセスや違反行為に関するログを除外し，運用の作業ログ，利用部門の活動ログを記録し，保管する。</li><li>特権的アクセスのログは，あまり重要ではないので，分析対象から除外する。</li><li>保管したログは，情報セキュリティインシデントが発生した場合にだけ分析し，分析結果に応じて必要な対策を講じる。</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu"><ul class="selectList"><li class="lia">正しい。取得したログを、認可されていないアクセスから保護し、内容が改ざんされないように保管することとされています。</li><li class="lii">通常の運用範囲を超えたアクセスや違反行為を含めて、運用の作業ログ、利用部門の活動ログを記録し、保管することとされています。通常の運用範囲を超えたアクセスや違反行為に関するログを除外してはいけません。</li><li class="liu">特権的アクセスのログは、その重要性から、多頻度で厳密に分析するなど特別に厳格な管理をすることとされています。特権的アクセスのログも分析対象とすべきです。</li><li class="lie">保管したログを定期的に分析し、分析結果に応じて必要な対策を講じることとされています。ログの分析には、セキュリティインシデントの原因究明だけでなく予兆や痕跡を速やかに取得する目的もあるため、セキュリティインシデント発生時だけなく定期的に行う必要があります。</li></ul></div>#####qask#####<div class="sentence">SOAの説明はどれか。</div>/////qask/////<ul class="selectList"><li>会計，人事，製造，購買，在庫管理，販売などの企業の業務プロセスを一元管理することによって，業務の効率化や経営資源の全体最適を図る手法</li><li>企業の業務プロセス，システム化要求などのニーズと，ソフトウェアパッケージの機能性がどれだけ適合し，どれだけかい離しているかを分析する手法</li><li>業務プロセスの問題点を洗い出して，目標設定，実行，チェック，修正行動のマネジメントサイクルを適用し，継続的な改善を図る手法</li><li>利用者の視点から各業務システムの機能を幾つかの独立した部品に分けることによって，業務プロセスとの対応付けや他のソフトウェアとの連携を容易にする手法</li></ul>/////qask/////エ/////qask/////<div class="sentence" id="kaisetsu"><strong>SOA</strong>(Service Oriented Architecture，サービス指向アーキテクチャ)は、業務上の一処理に相当するソフトウェアで実現されている機能や部品を独立したサービスとし、それらを組み合わせ連携させることで言語やプラットフォームに依存せずにシステムを構築するという手法、またはそのことを指す用語です。<br/>SOAでは、機能単位の組み合わせでシステムを構築するので、ソフトウェアコンポーネントの再利用や機能の入替え、システムの再構築がしやすいという特徴があります。<br/><br/>SOAを実現する手段として、WebサービスやESB(Enterprise service bus)、CORBAを用いた分散オブジェクトシステムなどが使われます。<ul class="selectList"><li class="lia">ERP(Enterprise Resource Planning)の説明です。</li><li class="lii">フィット＆ギャップ分析の説明です。</li><li class="liu">PDCAサイクルの説明です。</li><li class="lie">正しい。SOAの説明です。</li></ul></div>#####qask#####<div class="sentence">BPOの説明はどれか。</div>/////qask/////<ul class="selectList"><li>災害や事故で被害を受けても，重要事業を中断させない，又は可能な限り中断期間を短くする仕組みを構築すること</li><li>社内業務のうちコアビジネスでない事業に関わる業務の一部又は全部を，外部の専門的な企業に委託すること</li><li>製品の基準生産計画，部品表及び在庫情報を基に，資材の所要量と必要な時期を求め，これを基準に資材の手配，納入の管理を支援する生産管理手法のこと</li><li>プロジェクトを，戦略との適合性や費用対効果，リスクといった観点から評価を行い，情報化投資のバランスを管理し，最適化を図ること</li></ul>/////qask/////イ/////qask/////<div class="sentence" id="kaisetsu"><strong>BPO</strong>(Business Process Outsourcing)は、経営資源の集中、業務効率の向上、業務コストの削減などを目的に、業務プロセスを対象としてアウトソーシングを実施することです。<br/>企業内部の間接部門で行われていた労務管理、人事、経理、給与計算、データの入出力や処理などのバックオフィス業務の一部や、コールセンターの業務全体などを外部の専門業者に委託するケースがこれに該当します。<ul class="selectList"><li class="lia">BCP(Business Continuity Plan，事業継続計画)の説明です。</li><li class="lii">正しい。BPOの説明です。</li><li class="liu">MRP(Material Requirements Planning)の説明です。</li><li class="lie">BSC(Balanced Score Card)の説明です。</li></ul></div>#####qask#####<div class="sentence">IT投資効果の評価方法において，キャッシュフローベースで初年度の投資によるキャッシュアウトを何年後に回収できるかという指標はどれか。</div>/////qask/////<ul class="selectList"><li>IRR(Internal Rate of Return)</li><li>NPV(Net Present Value)</li><li>PBP(Pay Back Period)</li><li>ROI(Return On Investment)</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu"><ul class="selectList"><li class="lia">IRR(Internal Rate of Return)は、投資により将来得られるキャッシュフローの現在価値と投資額の現在価値とが等しくなる割引率(内部収益率)を求め、投資により見込まれる内部収益率が本来得るべき利回りより大きいかどうかで投資の可否を判断する手法です。</li><li class="lii">NPV(Net Present Value)は、投資により得られるキャッシュフローを現在価値に換算し、そこから投資額を引いた正味現在価値を求め、その額が0(ゼロ)を上回っているかどうかで投資の可否を判断する手法です。</li><li class="liu">正しい。<strong>PBP</strong>(Pay Back Period)は、投資した資金をどれだけの期間で回収できるかをキャッシュフローベースで算定し、それを組織内の基準と比較することで投資の有効性を評価する手法です。回収期間法やペイバック法と呼ばれることもあります。</li><li class="lie">ROI(Return On Investment)は、投資額に対する利益の割合で投資効果を評価する手法です。</li></ul></div>#####qask#####<div class="sentence">非機能要件の使用性に該当するものはどれか。</div>/////qask/////<ul class="selectList"><li>4時間以内のトレーニングを受けることで，新しい画面を操作できるようになること</li><li>業務量がピークの日であっても，8時間以内で夜間バッチ処理を完了できること</li><li>現行のシステムから新システムに72時間以内で移行できること</li><li>地震などの大規模災害時であっても，144時間以内にシステムを復旧できること</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu"><strong>使用性</strong>(ユーザビリティ)とは、システムやソフトウェアが、利用者の要求に足るようにわかりやすく、使いやすく、また魅力的なものであるかの度合いです。<br/><br/>JIS X 25010:2013では、次のように定義されています。<br/><br/>「明示された利用状況において，有効性，効率性及び満足性をもって明示された目標を達成するために，明示された利用者が製品又はシステムを利用することができる度合い」<br/><br/>また使用性には、適切度認識性、習得性、運用操作性、ユーザーエラー防止性、ユーザーインタフェース快美性、アクセシビリティの7つの副特性が含まれます。<br/><br/>選択肢のうち、利用者の使いやすさに関わる要件は「ア」だけです。<ul class="selectList"><li class="lia">正しい。使用性のうち習得性に該当します。</li><li class="lii">性能効率性のうち時間効率性に該当します。</li><li class="liu">移植性のうち置換性に該当します。</li><li class="lie">信頼性のうち回復性に該当します。</li></ul><div class="img_margin"><img alt="65.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/65.gif"/></div></div>#####qask#####<div class="sentence">UMLの図のうち，業務要件定義において，業務フローを記述する際に使用する，処理の分岐や並行処理，処理の同期などを表現できる図はどれか。</div>/////qask/////<ul class="selectList"><li>アクティビティ図</li><li>クラス図</li><li>状態遷移図</li><li>ユースケース図</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu"><strong>アクティビティ図</strong>は、ビジネスプロセスの流れやプログラムの制御フローのような一連の手続きを可視化できる図です。フローチャートのUML版と言えるでしょう。フローチャートと似た表記法で処理の流れを記述できるほか、処理の分岐やマージ、並行処理のフォークやジョイン、タイマ制御や例外処理なども表現できるようになっています。<br/><br/>試験問題においてはアクティビティ図の特徴を以下のように表現しています。<ul><li>ある振る舞いから次の振る舞いへの制御の流れを表現する</li><li>多くの並行処理を含むシステムの、オブジェクトの振る舞いが記述できる</li><li>現実のビジネスプロセスで生じる並行処理が表現できる</li></ul><div class="img_margin"><img alt="66.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/66.gif"/></div><ul class="selectList"><li class="lia">正しい。アクティビティ図は、並行処理を含む一連の業務フローを記述する図です。</li><li class="lii">クラス図は、クラス、属性、クラス間の関係からシステムを記述する静的な構造図です。</li><li class="liu">状態遷移図は、時間の経過や状況の変化に応じて状態が変わるようなシステムの振る舞いを記述するときに適した図です。</li><li class="lie">ユースケース図は、システムに要求される機能をユーザーの視点から示した図です。ユーザー要件のモデリングに使用されます。</li></ul></div>#####qask#####<div class="sentence">PPMにおいて，投資用の資金源と位置付けられる事業はどれか。</div>/////qask/////<ul class="selectList"><li>市場成長率が高く，相対的市場占有率が高い事業</li><li>市場成長率が高く，相対的市場占有率が低い事業</li><li>市場成長率が低く，相対的市場占有率が高い事業</li><li>市場成長率が低く，相対的市場占有率が低い事業</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu"><strong>プロダクトポートフォリオマネジメント</strong>(PPM)は、縦軸と横軸に「市場成長率」と「市場占有率」を設定したマトリックス図を4つの象限に区分し，製品や事業の市場における位置付けを分析して資源配分を検討する手法です。<br/><br/>4つの象限は、市場内の位置付けから以下のような名称で呼ばれています。<dl><dt>花形(star) … [成長率：高、占有率：高]</dt><dd>占有率・成長率ともに高く、資金の流入も大きいが、成長に伴い占有率の維持には多額の資金の投入を必要とする分野</dd><dt>金のなる木(cash cow) … [成長率：低、占有率：高]</dt><dd>市場の成長がないため追加の投資が必要ではなく、市場占有率の高さから安定した資金・利益の流入が見込める分野</dd><dt>問題児(problem child) … [成長率：高、占有率：低]</dt><dd>成長率は高いが占有率は低いので、花形製品とするためには多額の投資が必要になる。投資が失敗し、そのまま成長率が下がれば負け犬になってしまうため、慎重な対応を必要とする分野</dd><dt>負け犬(dog) … [成長率：低、占有率：低]</dt><dd>成長率・占有率がともに低く、新たな投資による利益の増加も見込めないため市場からの撤退を検討するべき分野</dd></dl><div class="img_margin"><img alt="67.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/67.gif"/></div>投資用の資金源となるのは、安定した収益が見込める「金のなる木(成長率:低，占有率:高)」に位置する事業なので「ウ」が適切です。</div>#####qask#####<div class="sentence">アンゾフの成長マトリクスを説明したものはどれか。</div>/////qask/////<ul class="selectList"><li>外部環境と内部環境の観点から，強み，弱み，機会，脅威という四つの要因について情報を整理し，企業を取り巻く環境を分析する手法である。</li><li>企業のビジョンと戦略を実現するために，財務，顧客，内部ビジネスプロセス，学習と成長という四つの視点から事業活動を検討し，アクションプランまで具体化していくマネジメント手法である。</li><li>事業戦略を，市場浸透，市場拡大，製品開発，多角化という四つのタイプに分類し，事業の方向性を検討する際に用いる手法である。</li><li>製品ライフサイクルを，導入期，成長期，成熟期，衰退期という四つの段階に分類し，企業にとって最適な戦略を立案する手法である。</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu"><strong>アンゾフの成長マトリクス</strong>は、経営学者のH・イゴール・アンゾフ（H. Igor Ansoff）が提唱したもので、縦軸に「市場」、横軸に「製品」をとり、それぞれに「既存」「新規」の2区分を設け、4象限(市場浸透，製品開発，市場開拓，多角化)のマトリクスとしたものです。事業が成長・発展できる経営戦略を検討するために適したフレームワークです。<div class="img_margin"><img alt="68.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/68.gif"/></div><ul class="selectList"><li class="lia">SWOT分析の説明です。</li><li class="lii">バランススコアカードの説明です。</li><li class="liu">正しい。アンゾフの成長マトリクスの説明です。</li><li class="lie">プロダクトライフサイクルの説明です。</li></ul></div>#####qask#####<div class="sentence">バイラルマーケティングの説明はどれか。</div>/////qask/////<ul class="selectList"><li>顧客の好みや欲求の多様化に対応するために，画一的なマーケティングを行うのではなく，顧客一人ひとりの興味関心に合わせてマーケティングを行う手法</li><li>市場全体をセグメント化せずに一つとして捉え，一つの製品を全ての購買者に対し，画一的なマーケティングを行う手法</li><li>実店舗での商品販売，ECサイトなどのバーチャル店舗販売など複数のチャネルを連携させ，顧客がチャネルを意識せず購入できる利便性を実現する手法</li><li>人から人へ，プラスの評価が口コミで爆発的に広まりやすいインターネットの特長を生かす手法</li></ul>/////qask/////エ/////qask/////<div class="sentence" id="kaisetsu"><strong>バイラルマーケティング</strong>は、インターネット上では人から人への口コミが連鎖して爆発的に広がっていく性質を利用し、SNSやメール等での拡散を狙って話題になりやすい記事や企画を仕掛けることで、商品やサービスへの認知や興味を高めようとするマーケティング手法です。口コミを活用するので少ない広告宣伝費用で大きなプロモーション効果が望めますが、利用者に自発的なアクションを促す仕掛け作りが難しい、拡散の度合いがコントロールしにくいという面もあります。バイラル(viral)は、「ウイルス性の」や「感染的な」という意味を持つ言葉です。<br/><br/>したがって「エ」の説明が適切です。<ul class="selectList"><li class="lia">ワントゥワンマーケティングの説明です。</li><li class="lii">マスマーケティングの説明です。</li><li class="liu">オムニチャネルの説明です。</li><li class="lie">正しい。バイラルマーケティングの説明です。</li></ul></div>#####qask#####<div class="sentence">半導体産業において，ファブレス企業と比較したファウンドリ企業のビジネスモデルの特徴として，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>工場での生産をアウトソーシングして，生産設備への投資を抑える。</li><li>自社製品の設計，マーケティングに注力し，新市場を開拓する。</li><li>自社製品の販売に注力し，売上げを拡大する。</li><li>複数の企業から生産だけを専門に請け負い，多くの製品を低コストで生産する。</li></ul>/////qask/////エ/////qask/////<div class="sentence" id="kaisetsu">ファウンドリ企業とは、半導体の生産設備を保有し、他社から半導体の生産を受託する会社です。半導体の製造だけを専門的に行い、自ら回路設計を行うことはしません。一方、ファブレス企業とは、fab(fabrication…生産工場)を所有せずに製造業としての活動を行う会社のことです。<br/><br/>製造プロセスの微細化が進む半導体業界では、会社ごとに工場を持ってその都度対応するための投資を続けるより、他社に製造委託してしまった方が結果的にコストを抑えることができるため、このような垂直分業が発展しています。<br/><br/>ファウンドリ企業は、他社から半導体の生産を受託することを専門とする会社なので「エ」が適切な記述です。その他の記述は、生産工場を所有しないことによる強みなのでファブレス企業の特徴です。</div>#####qask#####<div class="sentence">XBRLで主要な取扱いの対象とされている情報はどれか。</div>/////qask/////<ul class="selectList"><li>医療機関のカルテ情報</li><li>企業の顧客情報</li><li>企業の財務情報</li><li>自治体の住民情報</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu"><strong>XBRL</strong>(eXtensible Business Reporting Language)は、各種財務報告用の情報を電子化して作成・流通・利用できるように標準化されたXMLベースの言語です。国内では日本公認会計士協会等が中心となって設立したXBRL Japanが作成、普及、啓蒙活動を行っており、2005年7月20日にJIS化(JIS X 7206)されています。XBRLに対応した代表的なシステムに国税庁のe-Tax(電子申告・電子納税システム 財務諸表部分に使用)等があります。<br/><br/>XBRLが主に取り扱うのは「企業の財務情報」です。したがって「ウ」が正解です。</div>#####qask#####<div class="sentence">"かんばん方式"を説明したものはどれか。</div>/////qask/////<ul class="selectList"><li>各作業の効率を向上させるために，仕様が統一された部品，半製品を調達する。</li><li>効率よく部品調達を行うために，関連会社から部品を調達する。</li><li>中間在庫を極力減らすために，生産ラインにおいて，後工程が必要とする部品を自工程で生産できるように，必要な部品だけを前工程から調達する。</li><li>より品質の高い部品を調達するために，部品の納入指定業者を複数定め，競争入札で部品を調達する。</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu"><strong>かんばん方式</strong>は、工程間の中間在庫の最少化を目的として"かんばん"と呼ばれる生産指示票を使う生産システムで、ジャストインタイム生産方式を実現するために重要な役割を果たす要素です。<br/><br/>前工程がムダに部品を多く造り、後工程に溜めてしまうという、それまでの非効率な生産を改善するために、かんばん方式では後工程の部品数が一定数以下になった時点で後工程が前工程から必要分を引き取り、前工程は引き取られた分だけを補充するという「後工程引き取り方式」で生産を行います。このとき後工程から前工程に渡される生産指示票を"かんばん"と呼ぶことから、このような生産方式を"かんばん方式"といいます。(現在ではITを利用した"eかんばん"に進化しています)<br/><br/>したがって「ウ」が正解です。</div>#####qask#####<div class="sentence">製造業のA社では，NC工作機械を用いて，四つの仕事a～dを行っている。各仕事間の段取り時間は表のとおりである。合計の段取り時間が最小になるように仕事を行った場合の合計段取り時間は何時間か。ここで，仕事はどの順序で行ってもよく，a～dを一度ずつ行うものとし，FROMからTOへの段取り時間で検討する。<div class="img_margin"><img alt="73.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/73.gif"/></div></div>/////qask/////<ul class="selectList"><li>4</li><li>5</li><li>6</li><li>7</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu">四つの仕事a～dの順序のすべての組合せ(24通り)に対して、段取り時間を検証していけばなんとかなります。このとき段取り時間が最小の"1"である仕事の流れを生かせば早く解答にたどり着けるはずです。<br/><br/>段取り時間が1時間の「a→c / b→a / b→c」を使う順序の組合せを優先して使うことを考えると、b→a(1時間)とa→c(1時間)の順序を使って、b→a→cが2時間の段取り時間で構成できることがわかります。残る仕事dは、他の作業の後ろまたは作業cの前なら2時間ですが、b→a→cの最初は仕事bですので、仕事cの後ろに回すのが適切となります。<br/><br/>以上より、合計段取り時間が最小となる順序は、<br/><br/>　仕事b→(1時間)→仕事a→(1時間)→仕事c→(2時間)→仕事d<br/><br/>したがって、合計段取り時間は「1＋1＋2＝4時間」となります。</div>#####qask#####<div class="sentence">会議におけるファシリテータの役割として，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>技術面や法律面など，自らが専門とする特定の領域の議論に対してだけ，助言を行う。</li><li>議長となり，経営層の意向に合致した結論を導き出すように議論をコントロールする。</li><li>中立公平な立場から，会議の参加者に発言を促したり，議論の流れを整理したりする。</li><li>日程調整・資料準備・議事録作成など，会議運営の事務的作業に特化した支援を行う。</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu"><strong>ファシリテータ</strong>(Facilitator)は、「進行役」として会議の支援を専門的に行う人のことです。会議中に自らの意見を主張したり、意思決定をしたりすることはせず、中立的な立場から議事の進行をコーディネートします。会議を設定する、発言を促す、話を整理する、話の脱線を防ぐことなどがファシリテータの役割です。ファシリテータを設けることで、参加者の活性化や相互理解および合意形成を促進する効果があります。<ul class="selectList"><li class="lia">ファシリテータは会議中に自らの意見を主張することはありません。また議論の内容について習熟していることはファシリテータの必須条件ではありません。</li><li class="lii">ファシリテータは中立的な立場であることが求められます。</li><li class="liu">正しい。</li><li class="lie">会議の進行役を務めるのがファシリテータの主な役割です。</li></ul></div>#####qask#####<div class="sentence">リーダーシップ論のうち，PM理論の特徴はどれか。</div>/////qask/////<ul class="selectList"><li>優れたリーダーシップを発揮する，リーダー個人がもつ性格，知性，外観などの個人的資質の分析に焦点を当てている。</li><li>リーダーシップのスタイルについて，目標達成能力と集団維持能力の二つの次元に焦点を当てている。</li><li>リーダーシップの有効性は，部下の成熟(自律性)の度合いという状況要因に依存するとしている。</li><li>リーダーシップの有効性は，リーダーがもつパーソナリティと，リーダーがどれだけ統制力や影響力を行使できるかという状況要因に依存するとしている。</li></ul>/////qask/////イ/////qask/////<div class="sentence" id="kaisetsu"><strong>PM理論</strong>(ピーエムりろん)とは、リーダーシップは「P機能」と「M機能」という2つの柱で構成されているとする理論で、2つの機能の強弱の組合せでリーダーのタイプを類型化して表します。<dl><dt>P機能(Performance function) … 目標達成能力</dt><dd>計画立案、指示、叱咤などによってチームの生産性を高め、目標達成に向けてチームをけん引していく能力</dd><dt>M機能(Maintenance function) … 集団維持能力</dt><dd>チーム構成員同士の人間関係を良好に保ち、チームワークを深める能力</dd></dl>各機能が強い場合を大文字(P,M)、弱い場合を小文字(p,m)で表し、その組合せで4つのタイプに当てはめます。<div class="img_margin"><img alt="75.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/75.gif"/></div>したがって「イ」の記述が適切です。<ul class="selectList"><li class="lia">特例論的アプローチの特徴です。戦前に一般的だった主張ですが、長年の研究結果よりリーダーと非リーダーを見分けるのに有効な資質は存在しないとされています。</li><li class="lii">正しい。PM理論の特徴です。</li><li class="liu">SL理論(状況対応リーダーシップ理論)の特徴です。いかなる状況にも効果的な唯一万能のリーダー行動は存在しないという主張の下、リーダーシップの有効性を状況との関係で捉え、状況要素のうち最も重要である部下や集団（フォロワー）の能力及び意欲の水準（レディネス）ごとに、有効性が高いリーダーシップのスタイルを示したモデルです。</li><li class="lie">状況呼応モデルの特徴です。リーダーのもつパワーおよびリーダーとメンバ間の対人関係や職位等によって決まる権力行使の幅によりリーダーシップの有効性が左右されるという考え方です。</li></ul></div>#####qask#####<div class="sentence">新製品の設定価格とその価格での予測需要との関係を表にした。最大利益が見込める新製品の設定価格はどれか。ここで，いずれの場合にも，次の費用が発生するものとする。<br/>　　固定費：1,000,000円<br/>　　変動費：600円／個<div class="img_margin"><img alt="76.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/76.gif"/></div></div>/////qask/////<ul class="selectList"><li>1,000</li><li>1,200</li><li>1,400</li><li>1,600</li></ul>/////qask/////エ/////qask/////<div class="sentence" id="kaisetsu">利益は"売上－費用"で計算できます。<br/><br/>この問題では、固定費と変動費が決められているので、<br/><br/>　利益＝価格×販売個数－固定費－変動費×販売個数<br/><br/>の式でそれぞれの場合の利益額を計算します。<ul class="selectList"><li class="lia">　1000×80,000－1,000,000－600×80,000<br/>＝80,000,000－1,000,000－48,000,000<br/>＝31,000,000</li><li class="lii">　1200×70,000－1,000,000－600×70,000<br/>＝84,000,000－1,000,000－42,000,000<br/>＝41,000,000</li><li class="liu">　1400×60,000－1,000,000－600×60,000<br/>＝84,000,000－1,000,000－36,000,000<br/>＝47,000,000</li><li class="lie">　1600×50,000－1,000,000－600×50,000<br/>＝80,000,000－1,000,000－30,000,000<br/>＝<b>49,000,000</b></li></ul>よって、最も利益額が大きいのは「エ」の設定価格で販売した場合です。</div>#####qask#####<div class="sentence">A社は，B社と著作物の権利に関する特段の取決めをせず，A社の要求仕様に基づいて，販売管理システムのプログラム作成をB社に委託した。この場合のプログラム著作権の原始的帰属に関する記述のうち，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>A社とB社が話し合って帰属先を決定する。</li><li>A社とB社の共有帰属となる。</li><li>A社に帰属する。</li><li>B社に帰属する。</li></ul>/////qask/////エ/////qask/////<div class="sentence" id="kaisetsu"><strong>著作権</strong>は「著作物を創作した者」に対して与えられる権利ですので、委託開発で作られたプログラムの著作権は、原則として委託者(発注者)ではなく制作者(受注者)に帰属します。<br/><br/>委託者側としては、制作にあたって色々なアイディアを出しているため、自分たちにも著作権があるのではと思われるかも知れませんが、著作権法が保護しているのはアイディアではなく現実に創作された著作物です。ソフトウェアやWebサイトなどを発注する際には、成果物の利用方法などを事前に検討した上で必ず契約書を作成し、その契約書の中で著作権の帰属について明記した規定を置くことが重要です。著作権譲渡特約や著作者人格権の不行使条項などがこれに該当します。<br/><br/>本問では、A社からB社にプログラム作成業務が委託されているので、著作権の原始的帰属先はプログラムを作成した<em class="r">B社</em>となります。</div>#####qask#####<div class="sentence">不正アクセス禁止法で規定されている，"不正アクセス行為を助長する行為の禁止"規定によって規制される行為はどれか。</div>/////qask/////<ul class="selectList"><li>業務その他正当な理由なく，他人の利用者IDとパスワードを正規の利用者及びシステム管理者以外の者に提供する。</li><li>他人の利用者IDとパスワードを不正に入手する目的で，フィッシングサイトを開設する。</li><li>不正アクセスの目的で，他人の利用者IDとパスワードを不正に入手する。</li><li>不正アクセスの目的で，不正に入手した他人の利用者IDとパスワードをPCに保管する。</li></ul>/////qask/////ア/////qask/////<div class="sentence" id="kaisetsu"><b>不正アクセス禁止法</b>は、不正アクセス行為やそれを助長する行為を禁止する法律です。不正アクセス行為とは、①アクセス制御機能を有するコンピュータに、②ネットワークを通じてアクセスし、③本人や管理者の承諾なく他人の認証情報を入力し、④アクセス制御によって制限されている機能を利用可能にする、という4つの要件を満たすものです。<br/><br/>不正アクセス禁止法で禁止されている行為は以下の5種類です。<ul><li>不正アクセス行為そのもの（3条）</li><li>業務その他正当な理由がある場合を除いて、第三者に他人の認証情報を提供する行為（5条）</li><li>不正アクセス行為のために、他人の認証情報を取得する行為（4条）</li><li>不正アクセス行為のために、他人の認証情報を保管する行為（6条）</li><li>管理者になりすまし、または管理者であると誤認させて認証情報の提供を要求する行為（7条）</li></ul>不正アクセス禁止法5条では、「何人も、業務その他正当な理由による場合を除いては、アクセス制御機能に係る他人の識別符号を、当該アクセス制御機能に係るアクセス管理者及び当該識別符号に係る利用権者以外の者に提供してはならない」と定め、業務その他正当な理由がある場合を除いて、他人のIDやパスワードを第三者に教えることを禁止しています。<br/><br/>したがって適切な記述は「ア」です。<ul class="selectList"><li class="lia">正しい。不正アクセス行為を助長する行為の禁止(5条)で規制される行為です。</li><li class="lii">フィッシング目的のサイト開設や、電子メールで利用権者に認証情報を入力させるのは、識別符号の入力を不正に要求する行為の禁止(7条)で規制される行為です。</li><li class="liu">他人の識別符号を不正に取得する行為の禁止(4条)で規制される行為です。</li><li class="lie">他人の識別符号を不正に保管する行為の禁止(6条)で規制される行為です。</li></ul></div>#####qask#####<div class="sentence">A社はB社に対して業務システムの設計，開発を委託し，A社とB社は請負契約を結んでいる。作業の実態から，偽装請負とされる事象はどれか。</div>/////qask/////<ul class="selectList"><li>A社の従業員が，B社を作業場所として，A社の責任者の指揮命令に従ってシステムの検証を行っている。</li><li>A社の従業員が，B社を作業場所として，B社の責任者の指揮命令に従ってシステムの検証を行っている。</li><li>B社の従業員が，A社を作業場所として，A社の責任者の指揮命令に従って設計書を作成している。</li><li>B社の従業員が，A社を作業場所として，B社の責任者の指揮命令に従って設計書を作成している。</li></ul>/////qask/////ウ/////qask/////<div class="sentence" id="kaisetsu"><strong>請負契約</strong>は、請負人がある仕事を完成することを約束し、発注者がその仕事の結果に対してその報酬を支払うことを内容とする労務供給契約の一種であり、請負元が自社の社員に対して、請負事業の指揮命令をします。<br/><br/><strong>偽装請負</strong>とは、契約上では業務委託の形式をとっているのに、実態は労働者派遣のようになっている状態を言います。請負契約では発注側の作業スペースの一部で受託側の従業員が作業を行うこともありますが、原則的には業務遂行の指示や管理が受託側によって行われ、発注側から独立していることが条件となります。請負契約であるにもかかわらず、受託側従業員が発注側の指揮命令の下に業務を行っている場合には労働者派遣契約に相当すると見なされ、偽装請負として取り締まられる対象となります。<br/><br/>つまりこの問題では、請負業務を行っているB社の従業員がどちら側の指揮命令で業務を行っているかがポイントになります。<ul class="selectList"><li class="lia">A社の従業員がA社の責任者の指揮命令のもとで業務を行っているので問題ありません。</li><li class="lii">A社の従業員がB社の責任者の指揮命令の下で業務を行っていますが、業務の委託はA社からB社に行われているので偽装請負には該当しません。</li><li class="liu">正しい。B社の従業員がA社の責任者の指揮命令の下で業務を行っているため、偽装請負にあたります。</li><li class="lie">B社の従業員がB社の責任者の指揮命令の下で業務を行っているので問題ありません。</li></ul></div>#####qask#####<div class="sentence">欧州へ電子部品を輸出するには，RoHS指令への対応が必要である。このRoHS指令の目的として，適切なものはどれか。</div>/////qask/////<ul class="selectList"><li>家電製品から有用な部分や材料をリサイクルし，廃棄物を減量するとともに，資源の有効利用を推進する。</li><li>機器が発生する電磁妨害が，無線通信機器及びその他の機器が意図する動作を妨げるレベルを超えないようにする。</li><li>大量破壊兵器の開発及び拡散，通常兵器の過剰備蓄に関わるおそれがある場合など，国際社会の平和と安全を脅かす輸出行為を防止する。</li><li>電気電子製品の生産から処分までの全ての段階で，有害物質が環境及び人の健康に及ぼす危険を最小化する。</li></ul>/////qask/////エ/////qask/////<div class="sentence" id="kaisetsu"><strong>RoHS指令</strong>(ろーずしれい)は、EUが発効した電気電子機器の製造段階における特定有害物質の使用制限に関する規則です。特定有害物質とは、鉛、水銀、カドミウム、六価クロムなど合計10物質で、最終的に埋立てや焼却で処分されるときに人体への悪影響がないように、これらの含有率を最大許容濃度以下にしなければなりません。<br/><br/>EU加盟国の製造業者は本指令に従った製品を市場に出さなければならず、EU加盟国の輸入業者には、本指令に準拠する電気電子機器であるかどうかを適切に評価するための適合性評価手順が製造業者によって実行されていることを確認する義務があります。したがって、EUに電子部品を輸出する国内業者はRoHS指令に対応する必要があります。<br/><br/>したがって「エ」の記述が適切です。<ul class="selectList"><li class="lia">WEEE指令の目的です。</li><li class="lii">EMC指令の目的です。電気電子機器を欧州に輸出する際に適合させる必要があります。</li><li class="liu">外国為替及び外国貿易法に基づく安全保障輸出管理（リスト規制やキャッチオール規制）の目的です。</li><li class="lie">正しい。RoHS指令の目的です。</li></ul></div>
<div class="sentence" id="kaisetsu"><strong>ターンアラウンドタイム</strong>は、入力の開始を始めたときからすべての出力を受け取るまでに要する時間のことをいいます。<br/><br/><strong>処理時間順方式</strong>は、処理時間の短いタスクを優先的に実行するスケジューリング方式です。新たなタスクが到着すると処理の待ち行列に加わり、CPUが空くと待ち行列の中から予想処理時間が最も短いタスクが選択され、実行状態に移されます。また、ジョブの多重度が1なので、CPUは同時に1つのジョブしか処理できません。<br/><br/>これらの条件に従うと、CPUは次のようにジョブを処理していくことになります。<ol class="maruList"><li class="maru1">開始時点で到着しているのはジョブAだけなので、CPUはジョブAの処理を開始する。</li><li class="maru2">開始から1秒後にジョブBが到着する。CPUはジョブAの処理を続ける。</li><li class="maru3">開始から2秒後にジョブCが到着する。同時にジョブAの処理が完了する。<br/>未処理のタスクの処理時間を比較するとC＜Bなので、CPUはジョブCの処理を開始する。</li><li class="maru4">開始から3秒後にジョブDが到着する。CPUはジョブCの処理を続ける。</li><li class="maru5">開始から4秒後にジョブEが到着する。CPUはジョブCの処理を続ける。</li><li class="maru6">開始から5秒後にジョブCの処理が完了する。<br/>未処理のタスクの処理時間を比較するとE＜D＜Bなので、CPUはジョブEの処理を開始する。</li><li class="maru7">開始から6秒後にジョブEの処理が完了する。<br/>未処理のタスクの処理時間を比較するとD＜Bなので、CPUはジョブDの処理を開始する。</li><li class="maru8">開始から8秒後にジョブDの処理が完了する。<br/>CPUは最後に残ったジョブBの処理を開始する。</li><li class="maru9">開始から12秒後にジョブBの処理が完了し、全てのジョブの処理が完了する。</li></ol>このようにタスクの完了順は「A→C→E→D→B」になり、開始から1秒後にジョブBが到着してから処理が終了するまでには<em class="r">11</em>秒を要します。<div class="img_margin"><img alt="16a.gif" src="https://www.ap-siken.com/kakomon/31_haru/img/16a.gif"/></div></div>
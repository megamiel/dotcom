<div class="sentence" id="kaisetsu"><strong>コンパイラ</strong>は、ソースコードを翻訳して、機械語の目的プログラム(実行ファイル／ロードモジュール)を生成する言語プロセッサです。<br/>実行ファイルを生成する前のソースコードを機械語に翻訳する過程において、ソースコードの解析が行われ、効率的、かつ、実行時間やメモリ使用量などを最少化するようにソースコードを調整する最適化処理が行われます。<ul class="selectList"><li class="lia">繰返し回数の多いループに対しては、ループの中身のコードを複数回配置してループ条件のチェック回数を減らしたり、分岐回数を減らすことによってオーバーヘッドを低減させる「ループ展開」と呼ばれる最適化が行われます。</li><li class="lii">CPUでは乗算よりも加算の方が高速に計算できます。実際には"2＊X"→"X＋X"というように乗算を加算に置き換える「演算子強度低減」と呼ばれる最適化が行われます。</li><li class="liu">正しい。「定数畳み込み」及び「定数伝播」と呼ばれる最適化手法です。変数はメモリ上に動的に確保されますが、定数はプログラムコード上に埋め込まれるという違いがあるため、定数は変数よりも高速にアクセスできます。</li><li class="lie">サブルーチンの呼び出しには余計なオーバーヘッドが生じます。このため、プログラムの実行に支障がない場合には、サブルーチンをメインプログラム中に展開してしまうことでオーバーヘッドを減らす「インライン展開」と呼ばれる最適化が行われます。</li></ul></div>
<div class="sentence" id="kaisetsu"><strong>エクストリームプログラミング</strong>(XP:eXtreme Programming)は、1990年代後半、Kent Beck氏らによって提唱されたソフトウェア開発手法でアジャイルソフトウェア開発と称される一連の手法の先駆けとなったものです。「プログラマーは人間である」という思想のもと、叩き台となるプログラムを早期に開発し、短いサイクルで頻繁にテストとリリースを繰り返すことで、顧客の要求への対応力と生産性を高め、リスクを軽減することを目的としています。<br/><br/>XPには年々いくつかのプラクティスが追加されていますが、基本となった12のプラクティスは次の通りです。<dl><dt>計画ゲーム</dt><dd>求める機能のコンセプトを短い文章で記したストーリーカードを作成する。そのカードをもとに、開発者・管理者を含めたチームとのミーティングを行い詳細を決定する。</dd><dt>短期リリース</dt><dd>動くソフトウェアを1～3ヶ月というできるだけ短い時間間隔でリリースする。</dd><dt>共通の用語</dt><dd>開発メンバ・顧客・管理者全員でイメージや理解を共有するため、用語集や図表を作成する。</dd><dt>単純さ優先</dt><dd>品質低下のもとと複雑な実装の組込みを避け最も単純な実装を優先する。</dd><dt>テスト駆動開発</dt><dd>求める機能を明確化するため、テスト対象コードを実装するよりも前に単体テストを作成する。</dd><dt>リファクタリング</dt><dd>完成済みのものでもソフトウェアの機能を変えずにソースコードの品質を良くすることを随時行う。</dd><dt>ペアプログラミング</dt><dd>これは二人一組で実装を行い、一人が実際のコードをコンピュータに打ち込み、もう一人はそれをチェックしながら補佐するという役割を随時交代しながら作業を進める。</dd><dt>ソースコードの共同所有</dt><dd>開発チーム全員がどのコードに対しても改善処置を行えるようにするため、ソースコードの所有者を決めない。</dd><dt>常に統合</dt><dd>あるコードが単体テストをパスする度にすぐに結合テストを行い問題点や改善点を探す。</dd><dt>週40時間労働</dt><dd>集中力を高め、開発効率を高めるためには心身の健康を保つ必要があるため残業を認めない。</dd><dt>顧客も一緒</dt><dd>顧客は開発チームと同室(または近く)で開発の見守りを行う。</dd><dt>コーディング規約</dt><dd>上記を実現するためのにコーディング規約を決めて遵守する。</dd></dl>選択肢の事例を上記のプラクティスに照らし合わせると以下のようになります。<ul class="selectList"><li class="lia">「週40時間労働」に反します。</li><li class="lii">「ソースコードの共同所有」に反します。</li><li class="liu">正しい。「常に統合」のプラクティスに適合します。</li><li class="lie">「ペアプログラミング」に反します。</li></ul></div>
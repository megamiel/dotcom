<div class="sentence" id="kaisetsu"><strong>第3正規形</strong>は、第2正規形である表に対して、主キー以外の属性によって一意に決まる属性を別表に移すことで得られます。これによりデータの冗長性が排除され、第2正規形における行の挿入・削除および更新時の異常が発生しなくなります。<br/><br/>例えば次の表があったとします。<div class="img_margin"><img alt="27_1.gif" src="https://www.ap-siken.com/kakomon/29_aki/img/27_1.gif"/></div>この表は、非キー属性"顧客コード"→"顧客名"という関数従属性が存在しているので第2正規形です。しかしこの表には、非キー属性からの関数従属性が残るがゆえに、次に挙げる異常が発生する可能性があります。<dl><dt>行の挿入時</dt><dd>未受注の(受注番号をもたない)顧客を登録できない。</dd><dt>行の削除時</dt><dd>受注番号1055の行を削除すると、A7053:鈴木電気の顧客情報が失われるように、情報の損失が生じる恐れがある。</dd><dt>値の更新時</dt><dd>B7060:中村商会の顧客名を変更する際、一部の行の値だけを変更すると同じ顧客コードで複数の顧客名が存在することになってしまう。</dd></dl>上記の表を第3正規形にすると、これらの異常が発生しなくなるため整合性を保ちやすくなります。<div class="img_margin"><img alt="27_2.gif" src="https://www.ap-siken.com/kakomon/29_aki/img/27_2.gif"/></div><ul class="selectList"><li class="lia">表の分割によりデータの冗長性が排除されるため、データ量は少なくなります。</li><li class="lii">表が分割されているのでデータベース操作の際に結合操作が必要になります。</li><li class="liu">正規化とデッドロックは関係ありません。</li><li class="lie">正しい。</li></ul></div>
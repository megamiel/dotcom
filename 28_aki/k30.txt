<div class="sentence" id="kaisetsu">トランザクションがコミットされると、DBMSはその更新情報をメモリ上のバッファとログファイルに書き出します。ログファイルについてはディスクへ即時書出しされますが、メモリバッファの内容については入出力効率向上のために、一定の間隔ごとにまとめてディスクに反映する方式をとっています。このディスクと同期を取るタイミングを「チェックポイント」といいます。この仕組みによりチェックポイント以前にコミットしたトランザクションに関してはディスクへの反映が保証されます。<br/><br/><b>チェックポイント法</b>が使用されているDBMSでは、システム障害の発生後、システムを復帰したときはデータベースがチェックポイントの状態に戻っています。このとき、ロールバックとロールフォーワードを組み合わせて、データベースを障害発生直前の状態に回復する処理が行われます。<dl><dt>ロールフォワード（前進復帰）</dt><dd>障害発生前にコミットしたトランザクションは、更新後ログを使って、コミットの内容を反映させる</dd><dt>ロールバック（後退復帰）</dt><dd>障害発生時にコミットされていないトランザクションは、更新前ログを使って、トランザクション開始時の状態に戻す</dd></dl>図を見ると、T1はチェックポイント前にコミットしているのでリカバリは不要、チェックポイントから障害発生までの間にコミットされているT2・T5がロールフォワード、障害発生時にトランザクション実行中のT3・T4・T6がロールバックの対象ということになります。しかし、トランザクションの処理内容を確認すると、T3・T4はデータベースへの書込み処理がありません。書込みが行われない場合、更新前後のデータを記録したログ（ジャーナルファイル）が生成されませんから、チェックポイントまで戻った後にこれを削除する必要がありません。したがって、T3とT4はロールバックの対象外となります。<div class="img_margin"><img alt="30_2.gif" src="https://www.ap-siken.com/kakomon/28_aki/img/30_2.gif"/></div>以上のことから、ロールフォワードで回復するのが「T2，T5」、ロールバックでトランザクション開始前に戻すのが「T6」と判断できます。したがって「ア」が正しい組合せです。 </div>
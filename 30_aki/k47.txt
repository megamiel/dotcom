<div class="sentence" id="kaisetsu"><strong>MVC</strong>(model-view-control)は、対話型アプリケーションを、モデル、ビュー、コントローラーという3つのコンポーネントに分割して設計・実装するアーキテクチャパターンです。<dl><dt>モデル層</dt><dd>そのアプリケーションが扱う領域のデータと手続きを表現する要素。多くのアプリケーションにおいてはデータベースの機能が、この層に該当する。</dd><dt>ビュー層</dt><dd>モデル層のデータを取り出してユーザーが見るのに適した形で表示する要素。WebシステムではHTMLを生成して、動的にデータを表示するためのプログラムなどが、この層に該当する。</dd><dt>コントローラー層</dt><dd>ユーザーの入力に対して応答し、それを処理する要素。受け取った入力に応じてモデル層やビュー層に処理を依頼する。</dd></dl>したがって「ウ」が正解です。<ul class="selectList"><li class="lia">Brokerは、分散環境において、互いに依存性を持たないコンポーネント群が、リモートサービスを起動することによって相互作用するという構造をもつアーキテクチャパターンです。</li><li class="lii">Layersは、アプリケーションを特定の抽象レベルに属するサブタスクのグループ群に分割するアーキテクチャパターンです。</li><li class="liu">正しい。MVCは、データの管理、利用者への情報表示、利用者からの入力と制御の三つのコンポーネントでGUIシステムを構成して、表示部分の変更に対して柔軟に対応するアーキテクチャパターンです。</li><li class="lie">Pipes and Filtersは、データストリームに対する一連の処理を、容易に追加又は削除できるように分割して個々にカプセル化し、段階的に実行することにより、柔軟な組み換えが可能なシステムを作成するアーキテクチャパターンです。</li></ul>参照URL: POSAアーキテクチャパターン一覧(PDF)<br/>　<a href="http://objectclub.jp/technicaldoc/object-orientation/pdf/chapter-3.pdf" target="_blank">http://objectclub.jp/technicaldoc/object-orientation/pdf/chapter-3.pdf</a></div>
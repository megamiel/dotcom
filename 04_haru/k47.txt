<div class="sentence" id="kaisetsu"><b>ホワイトボックステスト</b>における網羅性のレベルである「判定条件網羅」とは、プログラム中の分岐の判定条件において、結果が真となる場合、偽となる場合を少なくとも1回は実行するようにテストケースを設計することです。<ul class="selectList"><li class="lia">(1)は、1つ目の分岐ではA=0・B=0なのでNo、2つ目の分岐もA=0・C=2なのでNoです。(2)は、1つ目の分岐でA=1・B=1なのでNo、2つ目の分岐もA=1・C=2なのでNoです。<br/>どちらの判定条件においても「Yes」に分岐しないので誤りです。<div class="img_margin"><img alt="47a.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/47a.gif"/></div></li><li class="lii">正しい。(1)は、1つ目の分岐ではA=1・B=0なのでYes、2つ目の分岐もA=1・C=1なのでYesです。(2)は、1つ目の分岐でA=1・B=1なのでNo、2つ目の分岐もA=1・C=2なのでNoです。<br/>分岐網羅を満たしており、無駄がないので最少のテストケースとなります。<div class="img_margin"><img alt="47i.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/47i.gif"/></div></li><li class="liu">(1)は、1つ目の分岐ではA=0・B=0なのでNo、2つ目の分岐もA=0・C=2なのでNoです。(2)は、1つ目の分岐でA=1・B=1なのでNo、2つ目の分岐もA=1・C=2なのでNoです。(3)は、1つ目の分岐ではA=1・B=0なのでYes、2つ目の分岐もA=1・C=1なのでYesです。<br/>分岐網羅を満たしますが、テストケース(1)と(2)は冗長です。どちらか1つあれば十分なので最少ではありません。<div class="img_margin"><img alt="47u.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/47u.gif"/></div></li><li class="lie">(1)は、1つ目の分岐ではA=0・B=0なのでNo、2つ目の分岐もA=0・C=2なのでNoです。(2)は、1つ目の分岐でA=0・B=1なのでNo、2つ目の分岐もA=0・C=2なのでNoです。(3)は、1つ目の分岐ではA=1・B=0なのでYes、2つ目の分岐もA=1・C=1なのでYesです。<br/>分岐網羅を満たしますが、テストケース(1)と(2)は冗長です。どちらか1つあれば十分なので最少ではありません。<div class="img_margin"><img alt="47e.gif" src="https://www.ap-siken.com/kakomon/04_haru/img/47e.gif"/></div></li></ul>なお、網羅性のレベルには判定条件網羅の他にも次のようなものあります。<dl><dt>命令網羅(網羅性:低い↑)</dt><dd>すべての命令を少なくとも1回は実行するテストケースを設計する。</dd><dt>分岐網羅(判定条件網羅)</dt><dd>判定条件の真偽を少なくとも1回は実行するテストケースを設計する。</dd><dt>条件網羅</dt><dd>判定条件が複数ある場合に、それぞれの条件が真・偽の場合を組み合わせたテストケースを設計する。</dd><dt>判定条件・条件網羅</dt><dd>判定条件網羅と条件網羅を組み合わせてテストケースを設計する。</dd><dt>複数条件網羅(網羅性:高↓)</dt><dd>判定条件のすべての可能な結果の組合せを網羅し、かつ、すべての命令を少なくとも1回は実行するようにテストケースを作成する。</dd></dl></div>